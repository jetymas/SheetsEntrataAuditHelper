// Declare the new Class
function CAjaxRecordDetails( ownerObj, boolIsInline ){
	
	var m_intCurrentRowId = null;

	var owner 				= ownerObj;
	var m_boolIsInline 		= boolIsInline;
	var m_aarstrOutputCache = new Array();
	var m_boolIsVisible 	= false;
	var m_strPostVars;
	var m_objCurrrentRow;
	var m_strLastOutput;
	var position;
	var m_strOldClassName;


	function getDetails( objCurrentRow, postVars, strParameters, intRowId ){
		if( intRowId == m_intCurrentRowId ){
			hideDetails();
			return;
		}

		m_boolIsVisible = true;
		m_intCurrentRowId = intRowId;
		if( m_objCurrrentRow ){
			m_objCurrrentRow.className = m_strOldClassName;
		}

		m_strPostVars = postVars;
		m_objCurrrentRow = objCurrentRow;
		m_strOldClassName = objCurrentRow.className;
		m_objCurrrentRow.className = 'selectedDetailRow';

		if( ! m_aarstrOutputCache[m_intCurrentRowId] ){
			position('<div class="rowDetailInside" style="font-weight:bold; background-color:#f0f4fa; padding:15px;">Retrieving information. Please wait...</div>');

			var objGenericAjax = new jQuery.ajax({ url: strParameters + intRowId, complete:display } );
		}else{
			position(m_aarstrOutputCache[m_intCurrentRowId]);
		}

	}

	function display( objXmlHttpResponse ){
			if( 200 == objXmlHttpResponse.status ) {
				if( ! m_aarstrOutputCache[m_intCurrentRowId] ) {
					if( objXmlHttpResponse.responseText.length > 644) {
						m_aarstrOutputCache[m_intCurrentRowId] = objXmlHttpResponse.responseText;
					}
				}
				position( objXmlHttpResponse.responseText );

			} else {
				position('<div class="rowDetailInside" style="color:#990000; font-weight:bold; background-color:#f0f4fa; padding:15px; ">Failed to retrieve data. Please try again later.</div>');
			}

	}


	if(m_boolIsInline){
		var inline_row = null;
	}

	var content_div = document.createElement('div');
	owner.appendChild(content_div);
	content_div.style.display = 'none';
	content_div.className = 'rowDetail';
	if(!m_boolIsInline){
		content_div.style.position = 'absolute';
	}
	function autoPosition( output){
		content_div.innerHTML = output;
		position = get_abs_pos_from_elm(m_objCurrrentRow);
		content_div.style.left = String(position.x) + 'px';
		content_div.style.top = String(position.y + m_objCurrrentRow.clientHeight) + 'px';
		content_div.style.width = String(m_objCurrrentRow.clientWidth) + 'px';
		content_div.style.zIndex = 200;
		content_div.style.display = '';
		window.onresize = function(){
			autoPosition();
		}
	}
	function positionInline( output ){
		output = output.replace(/<\?xml version=\"1.0\"\?>/g,'');
		content_div.innerHTML = String(output);
		if(inline_row && inline_row.parentNode){
			inline_row.parentNode.removeChild(inline_row);
		}
		inline_row = document.createElement('tr');
		var newTd = document.createElement('td')
		newTd.colSpan = m_objCurrrentRow.getElementsByTagName('TD').length;
		newTd.style.padding = '0px;';

		inline_row.appendChild(newTd);
		m_objCurrrentRow.parentNode.insertBefore(inline_row,m_objCurrrentRow.nextSibling);
		cloneContentDiv = content_div.cloneNode(true);
		cloneContentDiv.style.display = (m_boolIsVisible)?'':'none';
		newTd.appendChild(cloneContentDiv);

	}

	function position(op){
		if(m_boolIsInline){
			positionInline(op);
		}else{
			autoPosition(op);
		}
	}

	function hideDetails(){
		m_intCurrentRowId = null;
		m_objCurrrentRow.className = m_strOldClassName;
		inline_row.style.display = 'none';
		m_boolIsVisible = false;
	}

	this.getDetails = getDetails;
	this.autoPosition = autoPosition;
	this.hideDetails = hideDetails;
}