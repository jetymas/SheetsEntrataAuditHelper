var DATA_BLOB_TYPE_LEASE_CUSTOMERS 	= 1;
var DATA_BLOB_TYPE_LEASE_PROPERTIES = 2;
var DATA_BLOB_TYPE_LEASE_LEADS 		= 3;
var DATA_BLOB_TYPE_LEASE_EMPLOYEES 	= 4;
var DATA_BLOB_TYPE_LEASE_OWNERS 	= 5;
var DATA_BLOB_TYPE_LEASE_VENDORS 	= 6;

var LOOKUP_TYPE_PROPERTY_UNITS			= 'property_units';
var LOOKUP_TYPE_RESIDENT_MAINTENANCE	= 'resident_maintenance';
var LOOKUP_TYPE_REASSCOCIATE_PAYMENT	= 'reassociate_payment';
var LOOKUP_TYPE_UNIT_MAINTENANCE		= 'unit_maintenance';

function setSearchParams( intDataBlobTypeId ){
	switch( intDataBlobTypeId ){
		case null: // all areas
			jQuery('#search_type_name').html(__('All Areas'));
			document.getElementById( 'data_blob_id' ).value = null;
			break;
		case 1: // lease customers
			jQuery('#search_type_name').html(__('Residents'));
			document.getElementById( 'data_blob_id' ).value = 1;
			break;
		case 2: // properties
			jQuery('#search_type_name').html(__('Properties'));
			document.getElementById( 'data_blob_id' ).value = 2;
			break;
		case 3: // leads
			jQuery('#search_type_name').html(__('Leads'));
			document.getElementById( 'data_blob_id' ).value = 3;
			break;
	}
	jQuery('#search-option').fadeOut();
}

//custom callback function:
function clickHandler( obj, container ) {

	switch( obj.data_blob_type_id ){
		case '1': // lease customers
			if( typeof loadLeaseCustomer == 'function' ) {
				loadLeaseCustomer( obj.lease_customer_id );
			} else {
				window.location='/?module=customers_systemxxx&lease_customer[id]='+obj.lease_customer_id;
			}

			break;

		case '2': // properties
			window.location='/?module=property_system&property[id]='+obj.property_id;
			break;

		case '3': // leads

			if( typeof loadApplication == 'function' ) {
				loadApplication( obj.application_id, '', obj.property_id );
			} else {
				window.location='/?module=prospect_systemxxx&application[id]='+obj.application_id+'&popup=1';
			}

			break;
	}
}

(function($) {
	var isUsingFastLookupPro = true;

	$.fn.fastLookupPro = function(options) {

		var defaultOptions = {
			wait: 500, //idle time in microsecond
			dataBlobType: null,
			captureLength: 1,
			zIndex: 150
		};
		options = options || {};
		options = $.extend({}, defaultOptions, options);

		callAjax = new Array();

		return this.each(function() {
			var $this = $(this);
			var objXhr;

			callAjax[$this.attr('id')] = 1;

			$this.after('<div id="'+$this.attr('id')+'_searchData" class="fastResultBox" style="z-index: '+options.zIndex+';"></div>');

			$this.attr('autocomplete', 'off');

			var $contentDiv = $('#'+$this.attr('id')+'_searchData');

			var twOptions = {callback: function(){lookupAjaxRequest($this, $contentDiv, options);}} // typeWatch callback which will execute once the idle wait time is finished.
			twOptions = $.extend({},options,twOptions);

			$this.keydown(function(e){
				switch(e.which) {
					case 40: // down
						e.preventDefault();
						moveSelection($contentDiv, 'down', $this);
						break;

					case 38: // up
						e.preventDefault();
						moveSelection($contentDiv, 'up', $this);
						break;

					case 13: // enter

						var active = $('tr.active:first', $contentDiv);

						if(active.length > 0) {
							e.preventDefault();
							$contentDiv.fadeOut('fast');
							rowOnClick($this, active);
						}

						break;

					case 27: // escape
						$contentDiv.fadeOut('fast');
						break;
					case 9: // tab
						//$this.val('');
						$contentDiv.fadeOut('fast');
						break;
					case 8: // backslash
					case 46: // delete
						if( 0 == ($.trim($this.val())).length ) $contentDiv.fadeOut('fast');
						break;
				}
			});

			$this.keypress(function(e){
				switch(e.which) {
					case 13: // enter
						callAjax[$this.attr('id')] = 1;
						lookupAjaxRequest($this, $contentDiv, options);
						e.preventDefault();
						break;

					case 8: // backslash
					case 46: // delete
						if( 0 == ($.trim($this.val())).length ) $contentDiv.fadeOut('fast');
					default:
						callAjax[$this.attr('id')] = 1;
						break;
				}
			});

			$contentDiv.mouseleave(function() {
				isUsingFastLookupPro = false;
			});

			$contentDiv.mouseover(function() {
				isUsingFastLookupPro = true;
			});

			$('html').mouseup(function(){
				if( false == isUsingFastLookupPro ){
					$contentDiv.fadeOut('fast');
				}
			});

			$this.typeWatch(twOptions);
		});

		function lookupAjaxRequest($this, $contentDiv, options) {
			if( 0 == callAjax[$this.attr('id')] ) return;
			if( options.captureLength > $this.val().length ) return;

			if( $contentDiv.find(':hidden') ) $contentDiv.fadeIn('fast');

			options = $.extend({},options,{beforeSend: function(){}, success: function(responseText){lookupAjaxOnSuccess($this, $contentDiv, responseText);}});

			strRequestUrl = buildRequestUrl($this, options);

			if( typeof psi === "object" ) {
				options.strElementSelector = "#" + $contentDiv.attr( "id" );
				options.url = strRequestUrl;

				psi.patterns.ajaxRequest( options );

			} else {
				ajaxRequest( $contentDiv.attr( "id" ), strRequestUrl, options );
			}
		}

		function buildRequestUrl($this, options) {
			//encode, so that special parameters can pass by url
			var strValue = encodeURIComponent( $this.val() );

			// action can be further used for making switch case
			if( options.action && 'search_residents_applicants' == options.action ) {

				if( options.invokedFrom ){

					switch( options.invokedFrom ) {
						case 'AddSinglePayment':
							var strRequestUrl = '/?module=fast_lookup&action=search_residents_applicants&fast_lookup_filter[search]='+strValue+'&result_data_id='+$this.attr('id')+'&fast_lookup_filter[invoked_from]=add_single_payment&fast_lookup_filter[property_ids]='+options.propertyIds+'&fast_lookup_filter[restrict_to_load_fmo_processed_leases]='+options.restrictToLoadFmoProcessedLeases;
							break;

						case 'AssociatePayment':
							var strRequestUrl = '/?module=fast_lookup&action=search_residents_applicants&fast_lookup_filter[search]='+strValue+'&result_data_id='+$this.attr('id')+'&fast_lookup_filter[invoked_from]=associate_payment&fast_lookup_filter[property_id]='+options.propertyId;
							break;
						default:
							// need to handle it
							break;
					}

					if( options.traceCallFromFlag == 'AddSinglePayment' ) {
						strRequestUrl = strRequestUrl + '&allow_evicted_residents=1' + '&allow_evicting_residents=1';
					}

				}

			} else if( options.action && 'search_residents_maintenance' == options.action ) {
					switch( options.action ) {
						case 'search_residents_maintenance':
							var strRequestUrl = '/?module=fast_lookup&action=search_residents_maintenance&fast_lookup_filter[search]='+strValue+'&result_data_id='+$this.attr('id')+'&fast_lookup_filter[property_id]='+options.propertyId;
							break;
						default:
							// need to handle it
							break;
					}
			} else if( options.action && 'waitlist_search_by_applicant_name' == options.action ) {
					switch( options.action ) {
						case 'waitlist_search_by_applicant_name':
							var strRequestUrl = '/?module=fast_lookup&action=waitlist_search_by_applicant_name&fast_lookup_filter[search]='+strValue+'&result_data_id='+$this.attr('id')+'&fast_lookup_filter[property_id]='+options.propertyId;
							break;
						default:
							// need to handle it
							break;
					}
			}  else if( options.action && 'search_roommates' == options.action ) {
				var strRequestUrl = '/?module=bulk_roommates_shufflexxx&action=search_roommates&fast_lookup_filter[search]='+strValue+'&result_data_id='+$this.attr('id')+'&fast_lookup_filter[property_id]='+options.propertyId;
			} else if( options.action && 'search_units_maintenance' == options.action ) {
				switch( options.action ) {
					case 'search_units_maintenance':
						var strRequestUrl = '/?module=fast_lookup&action=search_units_maintenance&fast_lookup_filter[search]='+strValue+'&result_data_id='+$this.attr('id')+'&fast_lookup_filter[property_id]='+options.propertyId;
						break;
					default:
						// need to handle it
						break;
				}
			} else if( options.action && 'search_document_by_document_name' == options.action ) {
				var strRequestUrl = '/?module=fast_lookup&action=search_document_by_document_name&fast_lookup_filter[search]='+strValue+'&result_data_id='+$this.attr('id')+'&fast_lookup_filter[type_id]='+options.typeId;
			} else {
				var strRequestUrl = '/?module=fast_lookup&action=search_globally&fast_lookup_filter[search]='+strValue+'&result_data_id='+$this.attr('id')+'&fast_lookup_filter[property_id]='+options.propertyId;
			}

			if( options.lookupType && LOOKUP_TYPE_PROPERTY_UNITS == options.lookupType || LOOKUP_TYPE_RESIDENT_MAINTENANCE == options.lookupType || LOOKUP_TYPE_UNIT_MAINTENANCE == options.lookupType ) {
				strRequestUrl = strRequestUrl + '&fast_lookup_filter[lookup_type]='+options.lookupType;
			} else {
				if( options.lookupType && LOOKUP_TYPE_REASSCOCIATE_PAYMENT == options.lookupType )
				{
					strRequestUrl = strRequestUrl + '&fast_lookup_filter[lookup_type]='+options.lookupType+'&fast_lookup_filter[restrict_to_load_fmo_processed_leases]='+options.restrictToLoadFmoProcessedLeases;
				}
				strRequestUrl = strRequestUrl + '&fast_lookup_filter[data_blob_type_id]='+document.getElementById( 'data_blob_id' ).value;
			}

			return strRequestUrl;
		}

		function lookupAjaxOnSuccess($this, $contentDiv, responseText) {
			$contentDiv.html(responseText);

			bindRowEvent($this, $contentDiv);
		}

		function bindRowEvent($this, $contentDiv) {
			$contentDiv.unbind("click");
			$contentDiv.delegate(".fastLookup2-tr", "click", function() {
				rowOnClick( $this, $( this ) );
			});
		}

		function rowOnClick($this, $row) {
			if(options.rowOnClick) {
				eval(options.rowOnClick)(_resultData[$this.attr('id')][$row.attr('id')], $this );
				callAjax[$this.attr('id')] = 0;
			}

			$('#'+$this.attr('id')+'_searchData').fadeOut('fast');
		}

		function moveSelection($contentDiv, direction, $this){
			if($(".fastLookup2-tr", $contentDiv).length > 0){

				var active = $("tr.active:first", $contentDiv);
				var tr = $("tr", $contentDiv);

				if(active.length > 0){
					if(direction == "down"){
						start = active.next();
					} else {
						start = active.prev();
					}

				} else {

					if(direction == "down"){
						var start = tr.eq(1);
						if ( !start || !start[0] || !start[0]['attributes'] || !start[0]['attributes'][1] || !start[0]['attributes'][1]['nodeValue'] ){
							var start = tr.eq(2);
						}
					} else {
						var start = tr.filter(":last");
					}
				}

				while ( !start || !start[0] || !start[0]['attributes'] || !start[0]['attributes'][1] || !start[0]['attributes'][1]['nodeValue'] ){

					if( direction == "down" ){
						if ( start.next().length > 0 ){
							start = start.next();
						} else {
							start = tr.eq(1);
						}
					} else {
						if ( start.prev().length > 0 ){
							start = start.prev();
						} else {
							start = tr.filter(":last");
						}
					}
				}

				tr.removeClass("active");
				start.addClass("active");
			}
		}
	};

})(jQuery);