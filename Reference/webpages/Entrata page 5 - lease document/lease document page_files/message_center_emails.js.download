/**
 * Created by sbhaware01 on 16-May-18.
 */

var intPreheaderTotalChar = 0,
	PREHEADER_LENGTH		= 250;
function preheaderCharacterCounter( strElementId, strCharCounterId ) {
	var intMessageLength 			= $( '#' + strElementId ).val().length,
		intMessageLengthWithNewLine = ( $( '#' + strElementId ).val().match( /\n/g )||[] ).length;
	intPreheaderTotalChar 	    = intMessageLength + intMessageLengthWithNewLine;

	if ( intPreheaderTotalChar > PREHEADER_LENGTH ) {
		$( '#' + strElementId ).val( $( '#' + strElementId ).val().substring( 0, ( PREHEADER_LENGTH - ( intMessageLengthWithNewLine ) ) ) );
	} else {
		$( '#' + strCharCounterId ).html( PREHEADER_LENGTH - ( intPreheaderTotalChar ) );
	}

}

function preventUserToAddPreheader( objEvent ) {
	if( ( ( intPreheaderTotalChar + 1 ) > PREHEADER_LENGTH && ( objEvent.keyCode == 32 || objEvent.keyCode > 47 || objEvent.keyCode == 13 ) ) ||  ( ( ( intPreheaderTotalChar + 2 ) > PREHEADER_LENGTH ) && objEvent.keyCode == 13 ) ) {
		objEvent.preventDefault();
	}
}

(function( window, $, undefined ) {
	var strSubjectRegex = /\\|<\/?\b(br|basefont|hr|input|source|frame|param|area|meta|!--|col|link|option|base|img|wbr|!DOCTYPE|a|abbr|acronym|address|applet|article|aside|audio|b|bdi|bdo|bgsound|big|blink|blockquote|body|button|canvas|caption|center|cite|code|colgroup|command|content|data|datalist|dd|del|details|dfn|dialog|dir|div|dl|dt|element|em|embed|fieldset|figcaption|figure|font|footer|form|frameset|head|header|hgroup|h1|h2|h3|h4|h5|h6|html|i|iframe|image|ins|isindex|kbd|keygen|label|legend|li|listing|map|main|mark|marquee|menu|menuitem|meter|multicol|nav|nextid|nobr|noembed|noframes|noscript|object|ol|optgroup|output|p|plaintext|picture|pre|progress|q|rb|rp|rt|rtc|ruby|s|samp|script|section|select|shadow|slot|small|span|spacer|strike|strong|style|sub|summary|sup|table|tbody|td|template|textarea|tfoot|th|thead|time|title|tr|track|tt|u|ul|var|video|xmp)\b.*?>?/i;
	var strEmailSubjectHtmlContentOrSlashError = __( 'Please do not use HTML tag or slash (\\) in subject.' );
	var MAX_FILE_UPLOAD_SIZE = 5;
	psi.MessageCenterEmail = {
		init: function() {
			var objThisRef = this;
			psi.MessageCenterEmail.boolIsFromRenewals = false;
			psi.MessageCenterEmail.boolIsFromDashboard = false;
			psi.MessageCenterEmail.boolShowAllFeatures = true;
			psi.MessageCenterEmail.boolIsDialogueCloseFromSave = false;
			psi.MessageCenterEmail.boolIsLeadEmail = 0;
			psi.MessageCenterEmail.boolIsFromNotProgressingDashboard = false;
			psi.MessageCenterEmail.strTableContentId = '';
			psi.MessageCenterEmail.boolIsFromCentralizedDashboard = false;
			psi.MessageCenterEmail.intStageId = 0;

			$( '#message_center_create_email' ).click( function() {
				GtmTracking.addComponentInteraction( 'create new email', 'dropdown' );
				objThisRef.isReuseEmail = false;
				if( psi.MessageCenterEmail.boolIsFromDashboard ) {
					objThisRef.createTemporaryScheduledEmailFilter( objThisRef );
				} else {
					objThisRef.loadComposeMessage();
				}
			} );
		},
		initPagination: function() {
			var objThisRef = this;

			var intPageSize = 20;
			var $strElementSelector = $( '#scheduled_email_filter_list_table' );

			if( $strElementSelector.find( ".tbl-body" ).length > 0 ) {
				$strElementSelector = $strElementSelector.find( ".tbl-body" );
			}

			var arrintScheduledEmailTypeId = [];
			var strSelectedListIds = 0;
			var intCheckboxCount = 0;
			var strSearchString = $( '.scheduled-email-filter-search-field' ).val();

			$( '#scheduled_email_types' ).find( '.form-checkbox' ).each( function() {
				if( true === $( this ).is( ':checked' ) ) {
					intCheckboxCount = intCheckboxCount + 1;
					arrintScheduledEmailTypeId.push( $( this ).val() );
				}
			} );

			if( 0 === intCheckboxCount ) {
				// Need to add validation here.
				objThisRef.showMessage( 'error', __( 'Please select at least one recipient type.' ), 'select_recipient_response_message' );
				GtmTracking.addError( 'modal interaction', '', 'select recipients', 'create new email', 'Please select at least one recipient type.' );
				return false;
			}

			$( '#selected_recipient_lists' ).find( '.js-list-item' ).each( function() {
				if( '' !== strSelectedListIds ) {
					strSelectedListIds += ',';
				}

				strSelectedListIds += $( this ).attr( 'id' );
			} );


			var strUrl = objThisRef.exitTags.load_scheduled_email_filter_lists + '&scheduled_email_filter[page_size]=' + intPageSize;

			strUrl += '&scheduled_email_filter[scheduled_email_type_ids]=' + arrintScheduledEmailTypeId.toString() + '&refresh_inner_list=1';

			strUrl += '&scheduled_email_filter[search_string]=' + strSearchString;

			strUrl += '&scheduled_email_filter[selected_filter_ids]=' + strSelectedListIds;

			strUrl += '&from_dashboard=' + psi.MessageCenterEmail.boolIsFromDashboard;

			$strElementSelector.data( "next_page_number", 1 );
			psi.patterns.lazyLoad( {
				strElementSelector: $strElementSelector,
				strOnScrollElementSelector: ".scheduled_email_filter_list_content",
				scrollEndValue: 20,
				data: $strElementSelector.data(),
				url: strUrl,
				customBeforeSend: function() {
					$strElementSelector.data( "next_page_number", $strElementSelector.data( "next_page_number" ) + 1 );
				},
				success: function( res ) {
					// checking data to prevent further ajax requests
					if( $( res ).filter( 'tr' ).length >= intPageSize || $( res ).filter( '.tbl-row' ).length >= intPageSize ) {
						$( 'table.js-lazy-load-data' ).find( ".js-loading-data" ).remove();
						$( 'table.js-lazy-load-data' ).append( res );
						$( 'table.js-lazy-load-data' ).data( "ajax-in-process", false );
					} else {
						$( 'table.js-lazy-load-data' ).find( ".js-loading-data" ).remove();
						$( 'table.js-lazy-load-data' ).append( res );
						$( 'table.js-lazy-load-data' ).data( "ajax-in-process", true );
					}
				}
			} );
		},
		initCreateEmailSteps: function() {
			var objThisRef = this;

			$( '#new-email' )
				.on( 'click', '.js-select-step', function( e ) {
					e.stopImmediatePropagation();
					var $this = $( this )
					var data = $this.data();
					var intPrevisouStep = $this.parents( '.step-list' ).find( '.active' ).data( 'seq' );
					var intCurrentStep = data.seq;

					var strStep = $this.attr( 'id' );
					var strFilterListIds = $( '#scheduled_email_filter_selected_lists' ).val();
					var $strElementSelector = '';
					var strUrl = '';
					var intScheduledEmailId = $( '#scheduled_email_id' ).val();
					var objData = null;
					var strTempBccEmailAddress = $( '.bcc-input' ).val();

					switch( strStep ) {
						case 'step-2':
							if( '' == strFilterListIds ) {
								objThisRef.showMessage( 'error', __( 'Please select at least one recipient list.' ), 'select_recipient_response_message' );
								GtmTracking.addError( 'modal interaction', '', 'select recipients', 'create new email', 'Please select at least one recipient list.' );
								return false;
							}

							if( '' != strTempBccEmailAddress && false == objThisRef.validateFromEmail( strTempBccEmailAddress ) ) {
								objThisRef.showMessage( 'error', __( '{%s, bccEmailAddress} is not a correct bcc email format.', { bccEmailAddress: strTempBccEmailAddress } ), 'select_recipient_response_message' );
								GtmTracking.addError( 'modal interaction', '', 'select recipients', 'create new email', strTempBccEmailAddress + ' is not a correct bcc email format.' );
								return false;
							}

							var intIsEmployeeList = $( '#is_employee_list' ).val();
							var intIsVendorList = $( '#is_vendor_list' ).val();
							var strUrlParameters = '&auto_save=1';
							var strUrl = objThisRef.exitTags.load_from_email_addresses + '&scheduled_email[id]=' + intScheduledEmailId + '&scheduled_emails[scheduled_email_filter_ids]=' + strFilterListIds + '&property_preferences[is_employee_list]=' + intIsEmployeeList + '&property_preferences[is_vendor_list]=' + intIsVendorList;
							if( true == psi.MessageCenterEmail.boolIsFromDashboard ) {
								strUrl += '&from_dashboard=true' + '&is_lead_email=' + psi.MessageCenterEmail.boolIsLeadEmail;
							}
							psi.patterns.ajaxRequest( {
								strElementSelector: '.from-email-addresses',
								type: 'POST',
								url: strUrl,
								beforeSend: function() {
									psi.patterns.showLoadingImage( {
										strElementSelector: '#compose-message'
									} );
								},
								complete: function() {
									if( false == psi.MessageCenterEmail.boolIsFromDashboard ) {
										psi.patterns.ajaxRequest( {
											type: 'POST',
											url: objThisRef.exitTags.insert_or_update_scheduled_email + strUrlParameters,
											data: $( '#form_scheduled_email_compose_message' ).serialize(),
											dataType: 'json',
											success: function( objResponse ) {
												psi.patterns.removeLoadingImage( {
													strElementSelector: '#compose-message'
												} );

												if( false == objResponse.status ) {
													objThisRef.showMessage( 'error', objResponse.message, 'select_recipient_response_message' );
													GtmTracking.addError( 'modal interaction', '', 'select recipients', 'create new email', objResponse.message );
													return false;
												}

												var intScheduledEmailId = $( '#scheduled_email_id' ).val();

												if( 'undefined' == typeof intScheduledEmailId || '' == intScheduledEmailId ) {
													var strEmailListFilterLocaleCode = $( '#scheduled_email_list_filter_locale_code' ).val();
													if( '' != strEmailListFilterLocaleCode && 'undefined' != typeof strEmailListFilterLocaleCode ) {
														$( '#scheduled_email_locale_code' ).find( 'option[value="' + strEmailListFilterLocaleCode + '"]' ).prop( 'selected', true );
													}
												}

												$( '#scheduled_email_id' ).val( objResponse.scheduled_email_id );
												$( '#choose-template' ).data( 'scheduled-email-id', objResponse.scheduled_email_id );

												if( '' != $( '#system_message_template_id' ).val() ) {
													psi.MessageCenterEmail.selectEmailTemplate( '', '', false );
												}
											},
										} );
									} else {
										if( ( true == psi.MessageCenterEmail.boolIsFromDashboard && false == psi.MessageCenterEmail.boolShowAllFeatures ) || false == $('#view-recipient-container').hasClass('hide') ) {
											$('#multiple-addresses .default-from-email-address-info input').removeClass('wide5');
										}

										psi.patterns.removeLoadingImage( {
											strElementSelector: '#compose-message'
										} );
									}
								}
							} );

							$this.addClass( 'active' ).removeClass( 'visited' ).siblings().removeClass( 'active' );
							$this.prev( '.js-select-step' ).addClass( 'visited' );
							$( data.show ).show();
							$( data.hide ).hide();
							if( true == psi.MessageCenterEmail.boolIsFromDashboard && 0 == $('#selected_recipient_lists').find('#'+psi.MessageCenterEmail.intTemporaryFilterListId).length ) {
								$('#scheduled_email_filter_lists').prepend( psi.MessageCenterEmail.strListHTML );
								$('#form_scheduled_email_compose_message #scheduled_email_filter_selected_lists').val('');
								$('#scheduled_email_filter_lists .scheduled_email_filter_' + psi.MessageCenterEmail.intTemporaryFilterListId ).find('.add').trigger('click');
								if( false == psi.MessageCenterEmail.boolShowAllFeatures ) {
									$('.js-template-selector-controls .use-template').remove();
									$('.step-list #step-1').hide();
									$('.step-list #step-2 .number-circle').hide();
									$('.from-address-inner-container').addClass('half');
									$('.view-recipient-container').addClass('half').removeClass('hide');
									$('#view-recipients').removeClass('hide');
									$('#view-recipients').attr( 'data-list-id', psi.MessageCenterEmail.intTemporaryFilterListId );
									$('#email_template_3').trigger('click');
									$('#change-layout-btn').remove();
									$('#shared_label').remove();
									$('.is_promotional_email').parent().remove();
								}
							}
							objThisRef.loadDefaultMergeFields();
							objThisRef.loadPropertyStandardResponses();
							objThisRef.loadPropertyAmenities();
							objThisRef.loadPropertyLeadSources();
							objThisRef.loadEmailSignature();
							if( true == psi.MessageCenterEmail.boolIsFromDashboard && true == psi.MessageCenterEmail.boolShowAllFeatures ) {
								objThisRef.ajaxSaveScheduledEmail();
							}
							break;

						case 'step-3':

							if( $( '.cke_focus' ).attr( 'title' ) ) {
								objThisRef.focusOutAndSaveContentData();
							}

							$strElementSelector = '#compose-message';
							objData = $( '#form_scheduled_email_compose_message' ).serialize();

							if( '' == strFilterListIds ) {
								objThisRef.showMessage( 'error', __( 'Please select at least one recipient list.' ), 'select_recipient_response_message' );
								GtmTracking.addError( 'modal interaction', '', 'compose message', 'create new email', 'Please select at least one recipient list.' );
								return false;
							}

							if( 1 == intPrevisouStep && '' == $( '#scheduled_email_subject' ).val() && '' == $( '#system_message_template_id' ).val() ) {
								objThisRef.showMessage( 'error', __( 'Please select Compose message step.' ), 'select_recipient_response_message' );
								GtmTracking.addError( 'modal interaction', '', 'compose message', 'create new email', 'Please select Compose message step.' );
								return false;
							}

							if( '' == $( '#scheduled_email_subject' ).val() ) {
								objThisRef.showMessage( 'error', __( 'Subject is required.' ), 'select_recipient_response_message' );
								GtmTracking.addError( 'modal interaction', '', 'compose message', 'create new email', 'Subject is required.' );
								return false;
							}

							if( $( '#scheduled_email_subject' ).val().match( strSubjectRegex ) ) {
								objThisRef.showMessage( 'error', strEmailSubjectHtmlContentOrSlashError, 'select_recipient_response_message' );
								GtmTracking.addError( 'modal interaction', '', 'compose message', 'create new email', strEmailSubjectHtmlContentOrSlashError );
								return false;
							}

							if( '' == $( '#system_message_template_id' ).val() ) {
								objThisRef.showMessage( 'error', __( 'Template selection is required.' ), 'select_recipient_response_message' );
								GtmTracking.addError( 'modal interaction', '', 'compose message', 'create new email', 'Template selection is required.' );
								return false;
							}

							if( false == objThisRef.isRescheduled && false == objThisRef.checkFromEmailAddress() ) {
								return false;
							}

							objThisRef.saveScheduledEmail( objData, $strElementSelector, strStep, $this );
							break;

						default:
							$this.addClass( 'active' ).removeClass( 'visited' ).siblings().removeClass( 'active' );
							$this.prev( '.js-select-step' ).addClass( 'visited' );
							$( data.show ).show();
							$( data.hide ).hide();
					}
				} )
				.on( 'click', '.js-save-step', function( e ) {
					e.stopImmediatePropagation();

					$( '.js-select-step.active' ).next().click();
				} )
				.on( 'click', '.js-previous-step', function( e ) {
					e.stopImmediatePropagation();
					$( '.js-select-step.active' ).prev().click();
				} )
				.on( 'click', '.js-discard-close', function( e ) {
					e.stopImmediatePropagation();
					objThisRef.discardEmail();
				} )
				.on( 'keypress', '.tabindex-action', function( e ) {
					if( 13 == e.which ) {
						$( this ).trigger( 'click' );
					}
					return false;
				} );

			$('.from-dashboard.js-save-close').on('click', function(e) {
				psi.MessageCenterEmail.boolIsDialogueCloseFromSave = true;
				e.stopImmediatePropagation();
				$( '.js-select-step.active' ).next().click();
			});

		},
		discardEmail: function() {
			var objThisRef = this;
			var intScheduledId = $( '#scheduled_email_id' ).val();
			var strUrl = objThisRef.exitTags.discard_email;

			if( intScheduledId ) {
				strUrl += '&scheduled_email[id]=' + intScheduledId;
			}

			psi.patterns.ajaxRequest( {
				type: 'POST',
				dataType: 'json',
				url: strUrl,
				beforeSend: function() {
					psi.patterns.showLoadingImage( {
						strElementSelector: '#new-email'
					} );
				},
				success: function( objResponse ) {
					psi.patterns.removeLoadingImage( {
						strElementSelector: '#new-email'
					} );

					psi.patterns.closeLargeDialog();
				}
			} );
		},
		checkFromEmailAddress: function() {
			var objThisRef = this;
			var boolIsValid = true;
			var boolIsValidAndAllowedToEditFromAddress = true;
			var strPropertyPreference = $( '#selected_property_preference' ).val();

			if( '' == strPropertyPreference ) {
				objThisRef.showMessage( 'error', __( 'From address selection is required.' ), 'select_recipient_response_message' );
				GtmTracking.addError( 'modal interaction', '', 'compose message', 'create new email', 'From address selection is required.' );
				return false;
			}

			if( 'MESSAGE_CENTER_EMAIL_RELAY' == strPropertyPreference ) {
				return true;
			}

			switch( strPropertyPreference ) {
				case 'MULTIPLE_FROM_EMAIL':
					$( '.js-multiple-from-address' ).each( function() {
						if( false == boolIsAllowedToEditFromAddress && '' == $( this ).val() ) {
							boolIsValidAndAllowedToEditFromAddress &= false;
						}
						if( false === $( this ).is( ':disabled' ) ) {
							if( '' == $( this ).val() || false === objThisRef.validateFromEmail( $( this ).val() ) ) {
								boolIsValid &= false;
							}
						}
					} );
					break;

				case 'CUSTOM_FROM_EMAIL':
					if( '' == $( '#scheduled_email_from_email_address' ).val() || false == objThisRef.validateFromEmail( $( '#scheduled_email_from_email_address' ).val() ) ) {
						boolIsValid &= false;
					}
					break;

				default:
					objThisRef.showMessage( 'error', __( 'From address selection is required.' ), 'select_recipient_response_message' );
					GtmTracking.addError( 'modal interaction', '', 'compose message', 'create new email', 'From address selection is required.' );
					return false;
			}

			if( false == boolIsValidAndAllowedToEditFromAddress ) {
				objThisRef.showMessage( 'error', __( 'One of the properties selected does not have a default from email address set. Please either contact your property administrator to update it or use a custom from email address.' ), 'select_recipient_response_message' );
				GtmTracking.addError( 'modal interaction', '', 'compose message', 'create new email', 'One of the properties selected does not have a default from email address set. Please either contact your property administrator to update it or use a custom from email address.' );
				return false;
			}

			if( false == boolIsValid ) {
				objThisRef.showMessage( 'error', __( 'You must enter a valid from email address.' ), 'select_recipient_response_message' );
				GtmTracking.addError( 'modal interaction', '', 'compose message', 'create new email', 'You must enter a valid from email address.' );
				return false;
			}

			return true;
		},
		loadStep: function( strElementSelector ) {
			$( '#' + strElementSelector ).click();
		},
		focusOutAndSaveContentData: function() {
			var strTitle = $( '.cke_focus' ).attr( 'title' );
			var editorId = strTitle.split( "," );
			editorId = editorId[1].trim();
			var editor = CKEDITOR.instances[editorId];
			var strData = editor.getData();

			strData = strData.replace( /<sampletext>(.*)<\/sampletext>/, '' );
			$( '#TEXT_' + editorId ).val( strData );
		},
		saveScheduledEmail: function( objData, $strElementSelector, strStep, $objStepElement ) {
			var objThisRef = this;
			var data = $objStepElement.data();

			if( $( '.cke_focus' ).attr( 'title' ) ) {
				objThisRef.focusOutAndSaveContentData();
			}

			psi.patterns.ajaxRequest( {
				type: 'POST',
				dataType: 'json',
				data: objData,
				url: objThisRef.exitTags.insert_or_update_scheduled_email + '&show_all_features=' + psi.MessageCenterEmail.boolShowAllFeatures + '&from_dashboard=' + psi.MessageCenterEmail.boolIsFromDashboard + '&is_lead_email=' + psi.MessageCenterEmail.boolIsLeadEmail,
				beforeSend: function() {
					if( $( '.cke_focus' ).attr( 'title' ) ) {
						objThisRef.focusOutAndSaveContentData();
					}

					psi.patterns.showLoadingImage( {
						strElementSelector: $strElementSelector
					} );
				},
				success: function( objResponse ) {
					psi.patterns.removeLoadingImage( {
						strElementSelector: $strElementSelector
					} );

					if(true == psi.MessageCenterEmail.boolIsFromDashboard ) {
						psi.patterns.closeLargeDialog();
					}
					$( '#scheduled_email_id' ).val( objResponse.scheduled_email_id );

					if( !objResponse.status ) {
						objThisRef.showMessage( 'error', objResponse.message, 'select_recipient_response_message' );
						return false;
					}

					var strUrl = objThisRef.exitTags.view_scheduled_message_send_time;
					strUrl += '&scheduled_email[id]=' + $( '#scheduled_email_id' ).val();

					if( true === objThisRef.isReuseEmail ) {
						strUrl += '&is_reuse_email=1';
					}

					psi.patterns.ajaxRequest( {
						strElementSelector: '.send-option-container',
						type: 'POST',
						url: strUrl
					} );

					$objStepElement.addClass( 'active' ).removeClass( 'visited' ).siblings().removeClass( 'active' );
					$objStepElement.prev( '.js-select-step' ).addClass( 'visited' );
					$( data.show ).show();
					$( data.hide ).hide();
				}
			} );
		},
		editEmail: function() {
			var objThisRef = this;
			$( '#scheduled_email_types' ).on( 'click', '.form-checkbox', function( e ) {
				e.stopImmediatePropagation();
				var intRecipientListCheckboxCount = $( '#scheduled_email_types' ).find( '.form-checkbox' ).length - 1;
				var intScheduledEmailTypeId = $( this ).val();
				var boolIsChecked = $( this ).is( ':checked' );

				if( 0 == intScheduledEmailTypeId ) {
					$( '#scheduled_email_types' ).find( '.form-checkbox' ).each( function() {
						$( this ).prop( 'checked', boolIsChecked );
					} );

				} else {
					if( true === boolIsChecked && intRecipientListCheckboxCount == $( '#scheduled_email_types' ).find( '.form-checkbox:checked' ).length ) {
						$( '#scheduled_email_types' ).find( '.form-checkbox' ).each( function() {
							$( this ).prop( 'checked', boolIsChecked );
						} );
					} else {
						$( '#all_selected_scheduled_email_type_id' ).prop( 'checked', false );
					}
				}

				objThisRef.loadScheduledEmailFilterLists();
			} );

			$( '#scheduled_email_list_filter_locale_code' ).change(  function( e ) {
				e.stopImmediatePropagation();
				objThisRef.loadScheduledEmailFilterLists();
			});

			$( '#scheduled_email_filter_lists' ).on( 'click', '.individual-recipient-list .add', function( e ) {
				e.stopImmediatePropagation();
				var intMaxSelection = 5;
				var intScheduledEmailFilterId = $( this ).data( 'scheduled-email-filter-id' );
				var intScheduledEmailTypeId = $( this ).data( 'scheduled-email-type-id' );
				var strScheduledEmailFilterListName = $( this ).data( 'scheduled-email-filter-name' );
				var strScheduledEmailFilterLocaleCode = $( this ).data( 'scheduled-email-filter-locale-code' );
				var intCheckboxCount = 0;
				var intSelectedListCount = $( '#selected_recipient_lists .js-list-item' ).length;
				var strScheduledEmailFilterSelectedLists = $( '#scheduled_email_filter_selected_lists' ).val();

				if( intMaxSelection == intSelectedListCount ) {
					objThisRef.showMessage( 'error', __( '5 or less recipient lists are permitted.' ), 'select_recipient_response_message' );
					GtmTracking.addError( 'modal interaction', '', 'select recipients', 'create new email', '5 or less recipient lists are permitted.' );
					return false;
				}

				$( '#is_employee_list' ).val( 0 );
				$( '#is_vendor_list' ).val( 0 );

				if( 3 == intScheduledEmailTypeId ) {
					$( '#is_employee_list' ).val( 1 );
				} else if( 5 == intScheduledEmailTypeId ) {
					$( '#is_vendor_list' ).val( 1 );
				}

				var strSelectedLocale = $( '#scheduled_email_list_filter_locale_code' ).val();

				if( 'undefined' == typeof strScheduledEmailFilterLocaleCode ) {
					strScheduledEmailFilterLocaleCode = '';
				}

				if( false == $( '#scheduled_email_list_filter_locale_code' ).prop( 'disabled' ) ) {
					$( '#scheduled_email_list_filter_locale_code' ).find( 'option[value="' + strScheduledEmailFilterLocaleCode + '"]' ).prop( 'selected', true );
					$( '#scheduled_email_list_filter_locale_code' ).prop( 'disabled', true );
				}

				$( '#scheduled_email_types' ).find( '.form-checkbox' ).each( function() {
					if( true === $( this ).is( ':checked' ) ) {
						intCheckboxCount = intCheckboxCount + 1;
					}

					if( intScheduledEmailTypeId != $( this ).val() ) {
						$( this ).prop( 'checked', false );
					} else {
						$( this ).prop( 'checked', true );
					}
					var intSelectedScheduledEmailTypeId = $( this ).val();

					if( 1 != $( '#is_text_message_list' ).val() ) {
						if( false == objThisRef.messageCenterListPermissions[intScheduledEmailTypeId] ) {
							$( '#create_new_filter_list' ).hide();
						} else {
							$( '#create_new_filter_list' ).show();
						}
					}

					$( this ).prop( 'disabled', true );
				} );

				if( '' == strScheduledEmailFilterSelectedLists ) {
					$( '#scheduled_email_filter_selected_lists' ).val( intScheduledEmailFilterId );
				} else {
					$( '#scheduled_email_filter_selected_lists' ).val( strScheduledEmailFilterSelectedLists + ',' + intScheduledEmailFilterId );
				}

				$( '#scheduled_email_type_id' ).val( intScheduledEmailTypeId );
				$( '#choose-template' ).data( 'scheduled-email-type-id', intScheduledEmailTypeId );

				var strSelectedListHtml = '<li class="margin5-bottom clearfix js-list-item" id="' + intScheduledEmailFilterId + '">' +
					'<div class="left"><a class= "edit_list">' + strScheduledEmailFilterListName + '</a> <span class="mc_notification"></span> </div>' +
					'<div class="right"> <a class="js-delete-list"><i class="trash"></i></a></div>' +
					'</li>';

				$( '#selected_recipient_lists' ).append( strSelectedListHtml );

				var intPageSize = $( '#scheduled_email_filter_list_table > tbody > tr' ).length;

				var strUrl = objThisRef.exitTags.rechable_recipient_count + '&reachable_filter[id]=' + intScheduledEmailFilterId;
				if( true == psi.MessageCenterEmail.boolIsFromDashboard ) {
					strUrl += '&from_dashboard=true&is_lead_email=' + psi.MessageCenterEmail.boolIsLeadEmail;
				}

				if( 1 == $( '#is_text_message_list' ).val() ) {
					strUrl += '&is_text_message_list=1';
				}
				if( 1 == $( '#is_emergency_text' ).val() ) {
					strUrl += '&is_emergency_sms_text_message_list=1';
				}

				psi.patterns.ajaxRequest( {
					type: 'POST',
					url: strUrl,
					success: function( $objResponse ) {
						$( '#' + intScheduledEmailFilterId + ' > div > .mc_notification' ).html( '<i>(' + $objResponse + ' ' + __( 'Recipients' ) + ')</i>' );
					}
				} );

				if( true == objThisRef.isI18nEnabledClient ) {
					if( 1 == intCheckboxCount && ( strSelectedLocale == strScheduledEmailFilterLocaleCode ) ) {
						$( this ).parents( 'tr' ).addClass( 'hide' );
					} else {
						objThisRef.loadScheduledEmailFilterLists();
					}
				} else {
					if( 1 == intCheckboxCount ) {
						$( this ).parents( 'tr' ).addClass( 'hide' );
					} else {
						objThisRef.loadScheduledEmailFilterLists();
					}
				}

			} );

			$( '#selected_recipient_lists' ).on( 'click', '.js-delete-list', function( e ) {
				e.stopImmediatePropagation();
				var intScheduledEmailFilterId = $( this ).parents( '.js-list-item' ).attr( 'id' );
				var strScheduledEmailFilterSelectedLists = $( '#scheduled_email_filter_selected_lists' ).val();
				var arrintScheduledEmailFilterSelecetedLists = strScheduledEmailFilterSelectedLists.split( ',' );

				$( this ).parents( '.js-list-item' ).remove();
				$( '.scheduled_email_filter_' + intScheduledEmailFilterId ).removeClass( 'hide' );


				if( 0 == $( '#selected_recipient_lists .js-list-item' ).length && 1 != $( '#from_dashboard' ).val() ) {
					$( '#scheduled_email_types' ).find( '.form-checkbox' ).each( function() {
						$( this ).prop( 'disabled', false );
					} );

					$( '#create_new_filter_list' ).show();

					if( true == objThisRef.isI18nEnabledClient ) {
						$( '#scheduled_email_list_filter_locale_code' ).prop( 'disabled', false );
					}

					$( '#scheduled_email_filter_selected_lists' ).val( '' );
					$( '#scheduled_email_type_id' ).val( '' );
				} else {

					var index = arrintScheduledEmailFilterSelecetedLists.indexOf( intScheduledEmailFilterId );

					if( index > -1 ) {
						arrintScheduledEmailFilterSelecetedLists.splice( index, 1 );
					}

					$( '#scheduled_email_filter_selected_lists' ).val( arrintScheduledEmailFilterSelecetedLists.toString() );
				}
			} );

			$( '#selected_recipient_lists' ).on( 'click', '.edit_list', function( e ) {
				e.stopImmediatePropagation();
				var intScheduledEmailFilterId = $( this ).parents( 'li' ).attr( 'id' );
				objThisRef.createFilterList( true, 0, '', intScheduledEmailFilterId, '', false );
			} );

			var delay = (function() {
				var intTimer = 0;
				return function( strCallbackFunction, intTime ) {
					clearTimeout( intTimer );
					intTimer = setTimeout( strCallbackFunction, intTime );
				};
			})();

			$( '.scheduled-email-filter-search-field' ).on( 'keyup', function( e ) {
				e.stopImmediatePropagation();

				delay( function() {
					objThisRef.loadScheduledEmailFilterLists();
				}, 500 );

			} );

			$( '.bcc-area' )
				.on( 'keydown', 'input.bcc-input', function( event ) {
					event.stopImmediatePropagation();
					if( event.keyCode == 32 || event.keyCode == 188 || event.keyCode == 186 || event.keyCode == 59 || event.keyCode == 13 || event.keyCode == 9 ) {
						objThisRef.validateAndAddBccEmailAddress();
					}
				} )
				.on( 'blur', 'input.bcc-input', function( event ) {
					event.stopImmediatePropagation();
					objThisRef.validateAndAddBccEmailAddress();
				} )
				.on( 'click', '.remove-tags', function( event ) {
					event.stopImmediatePropagation();

					var removeItem = $( this ).attr( 'tag' );
					var objRemoveElement = $( this ).parents( '.tags' );
					var strScheduledEmailsCcEmailAddress = $( '#scheduled_emails_cc_email_address' ).val();
					var arrStrScheduledEmailCcEmailAddresses = strScheduledEmailsCcEmailAddress.split( ',' );

					var index = arrStrScheduledEmailCcEmailAddresses.indexOf( removeItem );

					if( index > -1 ) {
						arrStrScheduledEmailCcEmailAddresses.splice( index, 1 );
					}

					objRemoveElement.remove();

					$( '#scheduled_emails_cc_email_address' ).val( arrStrScheduledEmailCcEmailAddresses.toString() );
					$( 'input.bcc-input' ).focus();
				} );

			$( '#create_new_filter_list' ).click( function( event ) {
				event.stopImmediatePropagation();
				var strLocaleCode = $( '#scheduled_email_list_filter_locale_code' ).val();
				objThisRef.createFilterList( true, 1, '', null, strLocaleCode, true );
				GtmTracking.addStep( '1', 'select recipients', 'create new email', 'button', 'create new list', 'inactive', 'true' );
			} );

		},
		updateCreateFilterListItem: function( intScheduledEmailTypeId, intScheduledEmailFilterId, strScheduledEmailFilterListName, strScheduledEmailFilterListLocaleCode ) {
			var objThisRef = this;
			var intMaxSelection = 5;

			var intCheckboxCount = 0;
			var intSelectedListCount = $( '#selected_recipient_lists .js-list-item' ).length;
			var strScheduledEmailFilterSelectedLists = $( '#scheduled_email_filter_selected_lists' ).val();

			$( '#is_employee_list' ).val( 0 );
			$( '#is_vendor_list' ).val( 0 );

			if( 3 == intScheduledEmailTypeId ) {
				$( '#is_employee_list' ).val( 1 );
			} else if( 5 == intScheduledEmailTypeId ) {
				$( '#is_vendor_list' ).val( 1 );
			}

			$( '#scheduled_email_types' ).find( '.form-checkbox' ).each( function() {
				if( true === $( this ).is( ':checked' ) ) {
					intCheckboxCount = intCheckboxCount + 1;
				}

				if( intScheduledEmailTypeId != $( this ).val() ) {
					$( this ).prop( 'checked', false );
				} else {
					$( this ).prop( 'checked', true );
				}

				$( this ).prop( 'disabled', true );
			} );

			if( false == $( '#scheduled_email_list_filter_locale_code' ).prop( 'disabled' ) ) {
				$( '#scheduled_email_list_filter_locale_code' ).find( 'option[value="' + strScheduledEmailFilterListLocaleCode + '"]' ).prop( 'selected', true );
				$( '#scheduled_email_list_filter_locale_code' ).prop( 'disabled', true );
			}

			$( '#scheduled_email_type_id' ).val( intScheduledEmailTypeId );
			$( '#choose-template' ).data( 'scheduled-email-type-id', intScheduledEmailTypeId );

			var objExistingList = $( '#selected_recipient_lists' ).find( '#' + intScheduledEmailFilterId );

			if( $( '#selected_recipient_lists' ).find( '#' + intScheduledEmailFilterId ).length ) {
				objExistingList.find( '.edit_list' ).text( strScheduledEmailFilterListName );
			} else {
				if( '' == strScheduledEmailFilterSelectedLists ) {
					$( '#scheduled_email_filter_selected_lists' ).val( intScheduledEmailFilterId );
				} else {
					if( intMaxSelection == intSelectedListCount ) {
						objThisRef.showMessage( 'error', __( '5 or less recipient lists are permitted.' ), 'select_recipient_response_message' );
						GtmTracking.addError( 'modal interaction', '', 'select recipients', 'create new email', '5 or less recipient lists are permitted.' );
						return false;
					}
					$( '#scheduled_email_filter_selected_lists' ).val( strScheduledEmailFilterSelectedLists + ',' + intScheduledEmailFilterId );
				}

				$( '#scheduled_email_type_id' ).val( intScheduledEmailTypeId );
				$( '#choose-template' ).data( 'scheduled-email-type-id', intScheduledEmailTypeId );

				var strSelectedListHtml = '<li class="margin5-bottom clearfix js-list-item" id="' + intScheduledEmailFilterId + '">' +
					'<div class="left"><a class="edit_list">' + strScheduledEmailFilterListName + '</a> <span class="mc_notification"></span> </div>' +
					'<div class="right"> <a class="js-delete-list"><i class="trash"></i></a></div>' +
					'</li>';

				$( '#selected_recipient_lists' ).append( strSelectedListHtml );

				var intPageSize = $( '#scheduled_email_filter_list_table > tbody > tr' ).length;
			}

			var strUrl = objThisRef.exitTags.rechable_recipient_count + '&reachable_filter[id]=' + intScheduledEmailFilterId;
			if( true == psi.MessageCenterEmail.boolIsFromDashboard ) {
				strUrl += '&from_dashboard=true&is_lead_email=' + psi.MessageCenterEmail.boolIsLeadEmail;
			}

			if( 1 == $( '#is_sms_text_message_list_creation' ).val() ) {
				strUrl += '&is_text_message_list=1';
			}

			if( 1 == $( '#is_emergency_sms_text_message_list_creation' ).val() ) {
				strUrl += '&is_emergency_sms_text_message_list=1';
			}

			psi.patterns.ajaxRequest( {
				type: 'POST',
				url: strUrl,
				success: function( $objResponse ) {
					$( '#' + intScheduledEmailFilterId + ' > div > .mc_notification' ).html( '<i>(' + $objResponse + ' ' + __( 'Recipients' ) + ')</i>' );
				}
			} );

			if( 1 == intCheckboxCount ) {
				$( this ).parents( 'tr' ).addClass( 'hide' );
			} else {
				objThisRef.loadScheduledEmailFilterLists();
			}
		},
		composeEmailScreen: function() {
			var objThisRef = this;

			$( '#compose-message' )
				.on( 'click', '.template-picker a', function() {
					var intSystemMessageTemplateId = $( this ).data( 'system-message-template-id' );
					var strTemplateName = $( this ).data( 'template' );

					objThisRef.selectEmailTemplate( intSystemMessageTemplateId, strTemplateName );
				} )
				.on( 'click', '#change-layout-btn .js-change-layout-btn', function() {
					$( '#create-new-message-content, #change-layout-btn' ).hide();
					$( '#select-layout-content' ).show();
					GtmTracking.addStep( '2', 'compose message', 'create new email', 'layout', 'change layout', 'active', 'true' );
				} )
				.on( 'click', '.js-form-addresses .js-pick-show', function() {
					var $this = $( this );
					var data = $this.data();
					if( $this.hasClass( 'disabled' ) ) {
						return false;
					}

					$( '#selected_property_preference' ).val( data.preference );

					$( data.show ).show();
					$( data.hide ).hide();
				} )
				.on( 'click', '#view-recipients', function() {
					MessageCenter.loadContactList( $(this).data('list-id'), true, 1 );
				} )
				.on( 'click', '.js-template-selector-controls .js-pick-show', function() {
					var $this = $( this );
					var data = $this.data();

					$( data.show ).show();
					$( data.hide ).hide();
				} )
				.on( 'click', '#choose-template', function() {
					if( $( '#scheduled_email_subject' ).val().match( strSubjectRegex ) ) {
						objThisRef.showMessage( 'error', strEmailSubjectHtmlContentOrSlashError, 'select_recipient_response_message' );
						GtmTracking.addError( 'modal interaction', '', 'compose message', 'create new email', strEmailSubjectHtmlContentOrSlashError );
						return false;
					}

					var strScheduledEmailLocaleCode = $( '#scheduled_email_locale_code' ).val();

					psi.patterns.addDialogContent( {
						strUrl: MessageCenter.exitTags.email_template_library + '&library_action=select&multi_select=false&recipient_type_id=' + $( this ).data( "scheduled-email-type-id" ) + '&scheduled_email_id=' + $( this ).data( "scheduled-email-id" ) + '&call_from=message_center' + '&preferred_locale_code=' + strScheduledEmailLocaleCode,
						title: __( 'Select Email Template' ),
						close: function( event ) {
							if( event.hasOwnProperty( 'originalEvent' ) ) {
								GtmTracking.addModalTimestampComplete( 'compose message', 'select', 'create new email > select email template' );
							} else {
								GtmTracking.addModalTimestampComplete( 'compose message', 'close', 'create new email > select email template' );
							}
						}
					} );
					GtmTracking.addModalTimestampStart( 'choose from template library', 'create new email > select email template' );
				} )
				.on( 'click', '#email_preview', function() {
					var $this = $( this );
					var strUrlParameters = '&is_ajax_save=1' + '&from_dashboard=' + psi.MessageCenterEmail.boolIsFromDashboard + '&is_lead_email=' + psi.MessageCenterEmail.boolIsLeadEmail;

					if( true == $this.hasClass( 'disabled' ) ) {
						return false;
					}

					if( $( '#scheduled_email_subject' ).val().match( strSubjectRegex ) ) {
						objThisRef.showMessage( 'error', strEmailSubjectHtmlContentOrSlashError, 'select_recipient_response_message' );
						GtmTracking.addError( 'modal interaction', '', 'compose message', 'create new email', strEmailSubjectHtmlContentOrSlashError );
						return false;
					}

					if( $( '.cke_focus' ).attr( 'title' ) ) {
						objThisRef.focusOutAndSaveContentData();
					}

					psi.patterns.ajaxRequest( {
						type: 'POST',
						url: objThisRef.exitTags.insert_or_update_scheduled_email + strUrlParameters,
						data: $( '#form_scheduled_email_compose_message' ).serialize(),
						dataType: 'json',
						beforeSend: function() {
							$this.addClass( 'disabled' );
							psi.patterns.showLoadingImage( {
								strElementSelector: "#email_preview"
							} );
						},
						success: function( objResponse ) {
							$this.removeClass( 'disabled' );
							psi.patterns.removeLoadingImage( {
								strElementSelector: "#email_preview"
							} );

							if( false == objResponse.status ) {
								objThisRef.showMessage( 'error', objResponse.message, 'select_recipient_response_message' );
								GtmTracking.addError( 'modal interaction', '', 'compose message', 'create new email', objResponse.message );
								return false;
							}

							$( '#scheduled_email_id' ).val( objResponse.scheduled_email_id );
							$( '#choose_template' ).data( 'scheduled-email-id', objResponse.scheduled_email_id );

							var strScheduledEmailFilterIds = $( '#scheduled_email_filter_selected_lists' ).val();

							psi.patterns.loadDialog( {
								strContentId: 'new_message_preview_dialog',
								width: 1055,
								height: 960,
								title: __( 'Email Preview' ),
								strUrl: objThisRef.exitTags.view_template_library_email_preview + '&scheduled_email_filter_ids=' + strScheduledEmailFilterIds + '&is_preview=1',
								close: function() {
									GtmTracking.addModalTimestampComplete( 'compose message', 'close', 'create new email > email preview' );
								}
							} );
							GtmTracking.addModalTimestampStart( 'preview email', 'create new email > email preview' );
						}
					} );
					GtmTracking.addStep( '2', 'compose message', 'create new email', 'button', 'preview email', 'inactive', 'true' );
				} )
				.on( 'click', '.js-add-attachments', function() {
					var $this = $( this );
					var intAttachedFileCount = parseInt( $( '.js-attached-file' ).length );
					var strUrlParameters = '&is_ajax_save=1' + '&from_dashboard=' + psi.MessageCenterEmail.boolIsFromDashboard + '&is_lead_email=' + psi.MessageCenterEmail.boolIsLeadEmail;

					if( true == $this.hasClass( 'disabled' ) ) {
						return false;
					}

					if( $( '#scheduled_email_subject' ).val().match( strSubjectRegex ) ) {
						objThisRef.showMessage( 'error', strEmailSubjectHtmlContentOrSlashError, 'select_recipient_response_message' );
						GtmTracking.addError( 'modal interaction', '', 'compose message', 'create new email', strEmailSubjectHtmlContentOrSlashError );
						return false;
					}

					psi.patterns.ajaxRequest( {
						type: 'POST',
						url: objThisRef.exitTags.insert_or_update_scheduled_email + strUrlParameters,
						data: $( '#form_scheduled_email_compose_message' ).serialize(),
						dataType: 'json',
						beforeSend: function() {
							$this.addClass( 'disabled' );
							psi.patterns.showLoadingImage( {
								strElementSelector: ".js-add-attachments"
							} );
						},
						success: function( objResponse ) {
							$this.removeClass( 'disabled' );
							psi.patterns.removeLoadingImage( {
								strElementSelector: ".js-add-attachments"
							} );

							if( false == objResponse.status ) {
								objThisRef.showMessage( 'error', objResponse.message, 'select_recipient_response_message' );
								GtmTracking.addError( 'modal interaction', '', 'compose message', 'create new email', objResponse.message );
								return false;
							}

							$( '#scheduled_email_id' ).val( objResponse.scheduled_email_id );
							$( '#choose_template' ).data( 'scheduled-email-id', objResponse.scheduled_email_id );

							psi.patterns.loadDialog( {
								title: __( 'Upload' ),
								strContentId: "create_email_attachment_dlg",
								strUrl: MessageCenter.exitTags.create_message_attachment + '&attached_file_count=' + intAttachedFileCount + '&scheduled_email_id=' + objResponse.scheduled_email_id,
								width: 450,
								height: 300,
								resizable: false,
								close: function( event ) {
									if( event.hasOwnProperty( 'originalEvent' ) ) {
										GtmTracking.addModalTimestampComplete( 'compose message', 'upload', 'create new email > upload' );
									} else {
										GtmTracking.addModalTimestampComplete( 'compose message', 'close', 'create new email > upload' );
									}
								}
							} );
							GtmTracking.addModalTimestampStart( 'add attachments', 'create new email > upload' )
						}
					} );
					GtmTracking.addStep( '2', 'compose message', 'create new email', 'button', 'add attachments', 'inactive', 'true' );
				} )
				.on( 'click', '.js-draft-close', function() {
					psi.MessageCenterEmail.boolIsDialogueCloseFromSave = true;
					objThisRef.ajaxSaveScheduledEmail( 'close', true, true );
				} )
				.on( 'click', '#view-details', function() {
					if( true == psi.MessageCenterEmail.boolIsLeadEmail ) {
						var strApplicantIds = $('#customers_ids_not_using_receiving_emails').val();
						psi.patterns.loadDialog({
							title			: __( 'Users Not Receiving Email' ),
							strContentId	: 'applicants_list',
							strUrl			: '/?module=applications_communicationxxx&action=view_users_not_receving_messages&type=email&applicants_not_in_message_center=' + strApplicantIds,
							width			: 750,
							height			: 500
						});
					} else {
						var strLeaseCustomersIds = $('#customers_ids_not_using_receiving_emails').val();
						psi.patterns.loadDialog({
							title			: __( 'Users Not Receiving Email' ),
							strContentId	: 'customers_list',
							strUrl			: '/?module=customers_systemxxx&action=view_users_not_receving_messages&type=email',
							data            : {'lease_customers_not_in_message_center' : strLeaseCustomersIds},
							width			: 750,
							height			: 500
						});
					}
					$('#ui-dialog-title-customers_list').text('Users Not Receiving Email');
				} );

			if( true == psi.MessageCenterEmail.boolIsFromDashboard && null != psi.MessageCenterEmail.strBlockedRecipients ) {
				var arrBlockedRecipients = psi.MessageCenterEmail.strBlockedRecipients.split(',');
				$('.view-recipient-container').removeClass('hide').addClass('half');
				$('.from-address-inner-container').addClass('half');
				$('.view-recipient-container #not-receiving-list-container').removeClass('hide');
				$('.view-recipient-container #not-receiving-list-container #not-receiving-text').html( __( '{%d,0} other users will <strong>NOT</strong> receive this email.', [arrBlockedRecipients.length] ) );
				$('.view-recipient-container #not-receiving-list-container #customers_ids_not_using_receiving_emails').val(psi.MessageCenterEmail.strBlockedRecipients);
			}

			if( false == psi.MessageCenterEmail.boolShowAllFeatures ) {
				$('.template-picker #email_template_3').trigger('click');
			}

			if( true == $('.is_promotional_email').hasClass('off') ) {
				$('#marketing_warning_message').removeClass('hide');
			}

			$( '#preheader' )
				.on( 'keyup', function() {
					preheaderCharacterCounter( 'preheader', 'preheader-text-count' );
				})
				.on( 'keydown', function( objEvent ) {
					preventUserToAddPreheader( objEvent );
				});
			preheaderCharacterCounter( 'preheader', 'preheader-text-count' );

			$( '.header_footer_option' ).on( 'click', function() {
				$( '#display_items' ).val( $(this).data().headerFooterOption );
				objThisRef.changeDefaultLogoStatus();
			});

			$( '.is_promotional_email' ).switchbutton( {
				on: function() {
					$( '#marketing_warning_message' ).addClass( 'hide' );
					GtmTracking.addStep( '2', 'compose message', 'create new email', 'button', 'yes', 'inactive', 'true' );
				},
				off: function() {
					$( '#marketing_warning_message' ).removeClass( 'hide' );
					GtmTracking.addStep( '2', 'compose message', 'create new email', 'button', 'no', 'inactive', 'true' );
				}
			} );
		},
		updateResponsePluginButtonStatus: function() {
			if( $( '#scheduled_email_filter_selected_lists' ).val() ) {
				if( arrQuickResponses ) {
					$( '.cke_combo__quickresponses' ).show();
					$( '.cke_combo__quickresponses' ).parent().css( 'display', 'block' );
				} else {
					$( '.cke_combo__quickresponses' ).hide();
					$( '.cke_combo__quickresponses' ).parent().css( 'display', 'none' );
				}
			} else {
				$( '.cke_combo__quickresponses' ).hide();
				$( '.cke_combo__quickresponses' ).parent().css( 'display', 'none' );
			}
		},
		loadPropertyStandardResponses: function() {
			var objThisRef = this;
			var strUrl = objThisRef.exitTags.view_property_standard_responses;

			if( 'undefined' == typeof $( '#scheduled_email_filter_selected_lists' ).val() ) {
				return false;
			}

			var strScheduledEmailFilterId = $( '#scheduled_email_filter_selected_lists' ).val();

			strUrl += '&scheduled_email_filter_id=' + strScheduledEmailFilterId;

			psi.patterns.ajaxRequest( {
				type: 'POST',
				url: strUrl,
				dataType: 'json',
				data: $( '#form_scheduled_email_compose_message' ).serialize(),
				success: function( objResponse ) {
					arrQuickResponses = objResponse.quickResponses;
					boolIsEmployeeList = objResponse.is_employee_list;
				}
			} );
		},
		loadPropertyLeadSources: function() {
			var objThisRef = this;
			var strUrl = objThisRef.exitTags.view_property_lead_sources;

			if( 'undefined' == typeof $( '#scheduled_email_filter_selected_lists' ).val() ) {
				return false;
			}

			var strScheduledEmailFilterId = $( '#scheduled_email_filter_selected_lists' ).val();

			strUrl += '&scheduled_email_filter_id=' + strScheduledEmailFilterId;

			psi.patterns.ajaxRequest( {
				type: 'POST',
				url: strUrl,
				dataType: 'json',
				data: $( '#form_scheduled_email_compose_message' ).serialize(),
				success: function( objResponse ) {
					arrLeadSources = objResponse.lead_sources;
				}
			} );
		},
		loadDefaultMergeFields: function() {
			var objThisRef = this;
			var strUrl = objThisRef.exitTags.view_default_merge_fields;

			if( 'undefined' == typeof $( '#scheduled_email_filter_selected_lists' ).val() ) {
				return false;
			}

			psi.patterns.ajaxRequest( {
				type: 'POST',
				url: strUrl,
				dataType: 'json',
				data: $( '#form_scheduled_email_compose_message' ).serialize(),
				success: function( objResponse ) {
					arrmixDefaultMergeFields = objResponse;
				}
			} );
		},
		loadPropertyAmenities: function() {
			var objThisRef = this;
			var strUrl = objThisRef.exitTags.view_property_amenities;

			if( 'undefined' == typeof $( '#scheduled_email_filter_selected_lists' ).val() ) {
				return false;
			}

			var strScheduledEmailFilterId = $( '#scheduled_email_filter_selected_lists' ).val();

			strUrl += '&scheduled_email_filter_id=' + strScheduledEmailFilterId;

			psi.patterns.ajaxRequest( {
				type: 'POST',
				url: strUrl,
				dataType: 'json',
				data: $( '#form_scheduled_email_compose_message' ).serialize(),
				success: function( objResponse ) {
					arrAmenities = objResponse.amenities;
				}
			} );
		},
		loadEmailSignature: function() {
			var objThisRef = this;
			var strUrl = objThisRef.exitTags.view_email_signature;

			if( 'undefined' == typeof $( '#scheduled_email_filter_selected_lists' ).val() ) {
				return false;
			}

			var strScheduledEmailFilterId = $( '#scheduled_email_filter_selected_lists' ).val();

			strUrl += '&scheduled_email_filter_id=' + strScheduledEmailFilterId;
			$( '#property_email_signature_value' ).val('');
			psi.patterns.ajaxRequest( {
				type: 'POST',
				url: strUrl,
				dataType: 'json',
				data: $( '#form_scheduled_email_compose_message' ).serialize(),
				success: function( objResponse ) {
					if( objResponse.email_signature ) {
						$( '#property_email_signature_value' ).val( objResponse.email_signature );
					}
				}
			} );
		},
		changeDefaultLogoStatus: function() {
			var intSelectedValue = $( '#display_items' ).val();
			var strHeaderPlaceHolder = __( 'Property Header' );
			var strFooterPlaceHolder = __( 'Property Footer' );

			$( '#headerPlaceHolder' ).remove();
			$( '#footerPlaceHolder' ).remove();
			$( '#logoPlaceHolder' ).remove();

			switch( intSelectedValue ) {
				case '1':
					$( '#contents' ).before( '<div id="logoPlaceHolder">' + __( 'Logo will display here' ) + '</div>' );
					break;
				case '2':
					$( '#contents' ).before( '<div id="headerPlaceHolder">' + strHeaderPlaceHolder + '</div>' );
					break;
				case '3':
					$( '#contents' ).after( '<div id="footerPlaceHolder">' + strFooterPlaceHolder + '</div>' );
					break;
				case '4':
					$( '#contents' ).before( '<div id="headerPlaceHolder">' + strHeaderPlaceHolder + '</div>' );
					$( '#contents' ).after( '<div id="footerPlaceHolder">' + strFooterPlaceHolder + '</div>' );
					break;
				default:
				// default block
			}
		},
		updateBccEmailAddress: function() {
			var objThisRef = this;

			var strBccEmails = $( '#scheduled_emails_cc_email_address' ).val();

			if( 0 < strBccEmails.length ) {
				var arrayExistingBccEmails = strBccEmails.split( ',' );
				//adding BCC emails in input
				$.each( arrayExistingBccEmails, function( key, strValue ) {
					strValue = $.trim( strValue );

					var strHtml = '<span class="tags">' + strValue + '<a class="remove-tags" href="#" title="' + __( 'Remove {%s, bccEmailAddress}', { bccEmailAddress: strValue } ) + '" tag="' + strValue + '">x</a></span>'
					$( 'input.bcc-input' ).before( strHtml );
				} );
			}
		},
		updateImageButtonLabel: function() {
			$( '.image_slot' ).each( function( index ) {
				if( '' == $( this ).find( 'img' ).attr( 'src' ) ) {
					$( this ).find( 'a' ).html( '<i class="edit"></i> ' + __( 'Edit' ) );
					$( this ).find( 'img' ).attr( 'data-link', "" );
					$( this ).find( 'img' ).attr( 'data-link-target', "" );

					var strSlotName = $( this ).find( 'img' ).attr( 'id' );
					$( '#' + strSlotName + '_link' ).val( "" );
					$( '#' + strSlotName + '_link_target' ).val( "" );
					$( this ).find( '.image-link-button' ).hide();
				} else {
					$( this ).find( 'a' ).html( '<i class="delete"></i> ' + __( 'Remove' ) );
					$( this ).find( '.image-link-button' ).show();
				}
			} );
		},
		selectEmailTemplate: function( intSystemMessageTemplateId, strTemplateName, boolIsAjaxSave ) {
			var objThisRef = this;
			var strUrl = psi.MessageCenterEmail.exitTags.edit_email_template;
			intSystemMessageTemplateId = intSystemMessageTemplateId || $( '#system_message_template_id' ).val();
			strTemplateName = strTemplateName || $( '#email_template_' + intSystemMessageTemplateId ).data( 'template' );

			if( 'undefined' == typeof boolIsAjaxSave ) {
				boolIsAjaxSave = true;
			}

			if( true == boolIsAjaxSave && $( '#scheduled_email_subject' ).val().match( strSubjectRegex ) ) {
				objThisRef.showMessage( 'error', strEmailSubjectHtmlContentOrSlashError, 'select_recipient_response_message' );
				GtmTracking.addError( 'modal interaction', '', 'compose message', 'create new email', strEmailSubjectHtmlContentOrSlashError );
				return false;
			}

			strUrl += '&scheduled_email[system_message_template_id]=' + intSystemMessageTemplateId;

			$( '#' + psi.MessageCenterEmail.strEmailTemplate ).data( 'template', strTemplateName );
			$( '#layout-text' ).html( strTemplateName );
			$( '#create-new-message-content, #change-layout-btn' ).show();
			$( '#select-layout-content' ).hide();
			$( '#system_message_template_id' ).val( intSystemMessageTemplateId );

			psi.patterns.ajaxRequest( {
				url: strUrl,
				data: $( '#form_scheduled_email_compose_message' ).serialize(),
				strElementSelector: '#' + psi.MessageCenterEmail.strEmailTemplate,
				success: function( strResponse ) {
					$( '#' +psi.MessageCenterEmail.strEmailTemplate ).html( strResponse );
					if( 0 < $( '#header_footer_option_type_id' ).val() ) {
						$( '#display_items' ).val( $( '#header_footer_option_type_id' ).val() );
						$( '.form-advancedselect li[val="' + $( '#display_items' ).val() + '"]' ) .trigger( 'click' );
					}

					var arrstrImageSlots = [ 'header_main_image', 'left_image', 'center_image', 'right_image' ];
					arrstrImageSlots.forEach( function ( strImageSlot ) {
						if( 0 == $( '#' + strImageSlot ).length ) {
						  $( '#' + strImageSlot + '_company_media_file' ).attr( 'title', '' );
						  $( '#' + strImageSlot + '_company_media_file' ).val( '' );
						} else {
						  $( '#' + strImageSlot ).attr( 'src', $( '#' + strImageSlot + '_company_media_file' ).attr( 'title' ) );
						  $( '#' + strImageSlot ).attr( 'data-link', $( '#' + strImageSlot + '_link' ).val() );
						  $( '#' + strImageSlot ).attr( 'data-link-target', $( '#' + strImageSlot + '_link_target' ).val() );
						}
					  } );

					objThisRef.changePreviewButtonsStatus();
					objThisRef.changeDefaultLogoStatus();
					objThisRef.updateImageButtonLabel();
					preheaderCharacterCounter( 'preheader', 'preheader-text-count' );
					if( true == boolIsAjaxSave ) {
						objThisRef.ajaxSaveScheduledEmail();
					}
				}
			} );
		},
		changePreviewButtonsStatus: function() {
			if( '' == $.trim( $( '#system_message_template_id' ).val() ) || '' == $.trim( $( '#scheduled_email_filter_selected_lists' ).val() ) ) {
				$( '#email_preview' ).addClass( 'disabled' );
			} else {
				$( '#email_preview' ).removeClass( 'disabled' );
			}
		},
		sendOption: function() {
			var objThisRef = this;

			$( '#send-options' ).on( 'click', '.js-pick-show', function() {
				var $this = $( this );
				var data = $this.data();

				$( '#scheduled_email_delivery_type_id' ).val( data.deliveryTypeId );

				if( 1 == data.deliveryTypeId && 1 == data.immediateEmail ) {
					$( '#start_datetime' ).val( '05/25/2018 2:30:00' );
				}

				$( data.show ).show();
				$( data.hide ).hide();
			} );
		},
		convertTo24Hour: function( strTime ) {
			var scheduledDate = time.substr( 0, 10 );
			var meridian = time.substr( time.length - 2 ).toLowerCase();
			var hours = parseInt( time.substr( 11, 13 ) );
			var minutes = parseInt( time.substr( 14, 16 ) );

			if( meridian == 'pm' ) {
				if( hours != 12 ) {
					hours = hours * 1 + 12;
				} else {
					hours = (minutes != '00') ? '00' : '24';
				}
			}

			return scheduledDate + ' ' + hours + ':' + minutes;
		},
		validateAndAddBccEmailAddress: function() {
			var objThisRef = this;

			var strValue = $.trim( $( 'input.bcc-input' ).val() );
			var intBccAddressCount = $( '.bcc-area span.tags' ).length;
			var strScheduledEmailsCcEmailAddress = $( '#scheduled_emails_cc_email_address' ).val();

			if( 'Enter Email' == strValue || '' == strValue ) {
				return false;
			}

			if( false == objThisRef.validateFromEmail( strValue ) ) {
				objThisRef.showMessage( 'error', __( '{%s, bccEmailAddress}  is not a correct email format.', { bccEmailAddress: strValue } ), 'select_recipient_response_message' );
				GtmTracking.addError( 'modal interaction', '', 'select recipients', 'create new email', strValue + ' is not a correct email format.' );
				$( 'input.bcc-input' ).focus();
				return false;
			}

			if( 5 <= intBccAddressCount ) {
				objThisRef.showMessage( 'error', __( '5 or less Bcc email addresses are permitted.' ), 'select_recipient_response_message' );
				GtmTracking.addError( 'modal interaction', '', 'compose message', 'create new email', '5 or less Bcc email addresses are permitted.' );
				$( 'input.bcc-input' ).val( '' );
				$( 'input.bcc-input' ).focus();
				return false;
			}

			var strHtml = '<span class="tags">' + strValue + '<a class="remove-tags" href="#" title="' + __( 'Remove {%s, bccEmailAddress}', { bccEmailAddress: strValue } ) + '" tag="' + strValue + '">x</a></span>'
			$( 'input.bcc-input' ).before( strHtml );

			if( '' == strScheduledEmailsCcEmailAddress ) {
				$( '#scheduled_emails_cc_email_address' ).val( strValue );
			} else {
				$( '#scheduled_emails_cc_email_address' ).val( strScheduledEmailsCcEmailAddress + ',' + strValue );
			}

			$( 'input.bcc-input' ).val( '' );
			return false;
		},
		loadScheduledEmailFilterLists: function() {
			var objThisRef = this;
			var intRecipientListCheckboxCount = $( '#scheduled_email_types' ).find( '.form-checkbox' ).length - 1;
			var arrintScheduledEmailTypeId = [];
			var intCheckboxCount = 0;
			var strSelectedListIds = '';
			var strSearchString = $( '.scheduled-email-filter-search-field' ).val();
			var strUrl = objThisRef.exitTags.load_scheduled_email_filter_lists;

			$( '#scheduled_email_types' ).find( '.form-checkbox' ).each( function() {
				if( true === $( this ).is( ':checked' ) ) {
					intCheckboxCount = intCheckboxCount + 1;
					arrintScheduledEmailTypeId.push( $( this ).val() );
				}
			} );

			$( '#selected_recipient_lists' ).find( '.js-list-item' ).each( function() {
				if( '' !== strSelectedListIds ) {
					strSelectedListIds += ',';
				}

				strSelectedListIds += $( this ).attr( 'id' );
			} );

			if( 0 === intCheckboxCount ) {
				// Need to add validation here.
				objThisRef.showMessage( 'error', __( 'Please select at least one recipient type' ), 'select_recipient_response_message' );
				GtmTracking.addError( 'modal interaction', '', 'select recipients', 'create new email', 'Please select at least one recipient type.' );
				return false;
			}

			var strScheduledEmailListFilterLocaleCode =  $( '#scheduled_email_list_filter_locale_code' ).val();

			$( '#scheduled_email_filter_list_table' ).data( 'next_page_number', 1 );
			$( 'table.js-lazy-load-data' ).data( "ajax-in-process", false );

			strUrl += '&scheduled_email_filter[selected_filter_ids]=' + strSelectedListIds + '&scheduled_email_filter[page_number]=0&scheduled_email_filter[page_size]=20&scheduled_email_filter[scheduled_email_type_ids]=' + arrintScheduledEmailTypeId.toString() + '&refresh_inner_list=1';

			if( true == objThisRef.isI18nEnabledClient && 'undefined' != typeof strScheduledEmailListFilterLocaleCode && '' == strScheduledEmailListFilterLocaleCode ) {
				strUrl += '&scheduled_email_filter[locale_code]=' + strScheduledEmailListFilterLocaleCode;
			}

			strUrl += '&scheduled_email_filter[search_string]=' + strSearchString + '&init_pagination=1';

			strUrl += '&from_dashboard=' + psi.MessageCenterEmail.boolIsFromDashboard;

			psi.patterns.ajaxRequest( {
				strElementSelector: '#scheduled_email_filter_lists',
				type: 'POST',
				url: strUrl
			} );

		},
		loadComposeMessage: function( intScheduledEmailId, strStepNumber, boolIsRescheduled, intScheduledEmailFilterId ) {

			if( false == this.isReuseEmail ) {
				GtmTracking.addModalTimestampStart( 'email', 'create new email' );
			} else {
				GtmTracking.addModalTimestampStart( 'message summary', 'create new email' );
			}

			if( 'undefined' == typeof boolIsRescheduled ) {
				boolIsRescheduled = false;
			}

			var strUrl = this.exitTags.create_template_library_scheduled_email;

			if( intScheduledEmailId ) {
				strUrl += '&scheduled_email[id]=' + intScheduledEmailId;
			}

			if( true == psi.MessageCenterEmail.boolIsFromDashboard ) {
				strStepNumber = 'step-2';
				strUrl += '&from_dashboard=true&enable_all_features=' + psi.MessageCenterEmail.boolShowAllFeatures + '&is_lead_email=' + psi.MessageCenterEmail.boolIsLeadEmail;
			}

			if( strStepNumber ) {
				strUrl += '&load_step=' + strStepNumber;
			}

			if( boolIsRescheduled ) {
				strUrl += '&rescheduled_email=' + 1;
			}

			if( 'undefined' != typeof intScheduledEmailFilterId ) {
				strUrl += '&scheduled_email_filter_id=' + intScheduledEmailFilterId;
				$( '#scheduled_email_filter_selected_lists' ).val(intScheduledEmailFilterId);
			}

			if( false == this.isReuseEmail ) {
				window.isReuseSentEmail = false;
				psi.patterns.loadLargeDialog( {
					title: __( 'Create New Email' ),
					strUrl: strUrl,
					onCloseCallback: function() {
						this.isReuseEmail = false;
						if( true == psi.MessageCenterEmail.boolIsFromDashboard ) {
							if( false == psi.MessageCenterEmail.boolIsDialogueCloseFromSave ) {
								psi.patterns.ajaxRequest( {
									type: 'POST',
									url: psi.MessageCenterEmail.exitTags.delete_scheduled_email_filter + '&scheduled_email_filter[id]=' + psi.MessageCenterEmail.intTemporaryFilterListId + '&from_dashboard=1' + '&is_lead_email=' + psi.MessageCenterEmail.boolIsLeadEmail,
								} );
							}
							if( true == psi.MessageCenterEmail.boolIsFromDashboard &&  true == psi.MessageCenterEmail.boolIsFromRenewals ) {
								psi.objRenewals.loadCurrentTab();
							} else if( false == psi.MessageCenterEmail.boolIsLeadEmail && false == psi.MessageCenterEmail.boolIsFromNotProgressingDashboard ) {
								psi.objCustomers.loadCurrentTab();
							} else if( false == psi.MessageCenterEmail.boolIsFromCentralizedDashboard && (true == psi.MessageCenterEmail.boolIsFromLeadDashboard ||  true == psi.MessageCenterEmail.boolIsFromNotProgressingDashboard )) {
								psi.objDashboard.reloadCurrentTab( psi.MessageCenterEmail.strTableContentId );
							}
							else if( true == psi.MessageCenterEmail.boolIsFromCentralizedDashboard && 0 != psi.MessageCenterEmail.intStageId ) {
								psi.objCntLeadsDashboard.loadTableByStage( psi.MessageCenterEmail.intStageId );
							}else {
								psi.patterns.ajaxRequest( { url: $( "table#tbl_prospects").attr( 'custom_load_url' ), strElementSelector:'#div-view-listing'} );
							}
						} else {
							loadCurrentTab( true );
						}
						window.onbeforeunload = null;
						$( 'html' ).unbind( "keydown.esc" ).bind( 'keydown.esc', null );
						psi.MessageCenterEmail.boolIsDialogueCloseFromSave = false;
					}
				} );
			} else {
				window.isReuseSentEmail = true;
				psi.patterns.addDialogContent( {
					title: __( 'Create New Email' ),
					strUrl: strUrl + '&is_reuse_email=1',
					onCloseCallback: function() {
						this.isReuseEmail = false;
						window.isReuseSentEmail = false;
						window.onbeforeunload = null;
						$( 'html' ).unbind( "keydown.esc" ).bind( 'keydown.esc', null );
					}
				} );
			}

			return false;
		},
		reUseMessage: function( intScheduledEmailId ) {
			var objThisRef = this;

			psi.patterns.ajaxRequest( {
				url: objThisRef.exitTags.reuse_scheduled_email + '&scheduled_email[id]=' + intScheduledEmailId,
				dataType: 'json',
				success: function( objResponse ) {
					if( true == objResponse.status ) {

						if( false == objThisRef.isAddContent ) {
							psi.patterns.removeLoadingImage( {
								strElementSelector: '#body'
							} );
						}

						$( '#view_single_message' ).dialog( 'close' );
						objThisRef.loadComposeMessage( objResponse.scheduled_email_id );
					} else {
						objThisRef.showMessage( 'error', objResponse.message, 'message_summary_response' );
						GtmTracking.addError( 'modal interaction', '', 'reuse', 'message summary', objResponse.message );
					}
				}
			} );
		},
		showMessage: function( strMessageType, strMessage, strLocation, intMessageTime ) {
			var strMessageDiv = strLocation || 'ajax_save_response';

			if( 'undefined' == typeof intMessageTime ) {
				intMessageTime = 7000;
			}

			$( '#' + strMessageDiv ).html( '<p class="alert ' + strMessageType + ' slim"><i></i>' + strMessage + '</p>' );
			if( 0 >= intMessageTime ) {
				$( '#' + strMessageDiv ).show();
			} else {
				$( '#' + strMessageDiv ).show().delay( intMessageTime ).fadeOut();
			}

			$( 'html, body, form, div' ).animate( { scrollTop: '0px' }, 1 );
		},
		removeMessage: function( strLocation ) {
			var strMessageDiv = strLocation || 'ajax_save_response';
			$( '#' + strMessageDiv ).fadeOut();
		},
		validateFromEmail: function( strEmail ) {
			var pattern = /^([A-Za-z0-9_\-\.])+\@([A-Za-z0-9_\-\.])+\.([A-Za-z]{2,4})$/;

			if( pattern.test( strEmail ) ) {
				return true;
			} else {
				return false;
			}
		},
		createFilterList: function( strComposeEmailMode, boolIsFirstLoad, intScheduledEmailId, intScheduledEmailFilterId, strLocaleCode, boolIsCreateNewList ) {
			var objThisRef = this;
			var strComposeEmailMode = strComposeEmailMode || false;
			var boolIsFirstLoad = boolIsFirstLoad || 0;
			var intScheduledEmailId = intScheduledEmailId || '';
			var boolIsFromEmailList = false;
			var strUrl = '';
			var strTitle = __( 'Create List' );

			var intIsSmsTextMessageList = $( '#is_text_message_list' ).val();
			var boolIsEmergencyTextMessageList = $( '#is_emergency_text' ).val();

			if( true == boolIsCreateNewList ) {
				GtmTracking.addModalTimestampStart( 'create new email', 'create new email > create list' );
			} else {
				GtmTracking.addModalTimestampStart( 'create new email', 'create new email > edit list' );
			}

			if( $( '#left_menu_emails' ).hasClass( 'selected' ) && !$( '#form_compose_email' ).length ) {
				boolIsFromEmailList = true;
			}

			if( true == strComposeEmailMode ) {
				strUrl = MessageCenter.exitTags.open_scheduled_email_filter;
			} else {
				strUrl = MessageCenter.exitTags.create_scheduled_email_filter;
			}

			if( intScheduledEmailId ) {
				strUrl += '&scheduled_email_id=' + intScheduledEmailId;
			}

			if( intScheduledEmailFilterId ) {
				strUrl += '&scheduled_email_filter_id=' + intScheduledEmailFilterId;
				strTitle = __( 'Edit List' );
			}
			strUrl += '&is_first_load=1&scheduled_email_type_id=' + $( '#scheduled_email_type_id' ).val();

			if( $( '#scheduled_email_filter_selected_lists' ).length ) {
				strUrl += '&assigned_scheduled_email_filter_ids=' + $( '#scheduled_email_filter_selected_lists' ).val();
			}

			strUrl += '&is_from_template_library=1';

			if( '' != strLocaleCode && true == $( '#scheduled_email_list_filter_locale_code' ).prop( 'disabled' ) ) {
				strUrl += '&filter_list_locale_code=' + strLocaleCode;
			}

			if( 1 == intIsSmsTextMessageList ) {
				strUrl += '&is_sms_text_message_list=1';

				if( true == boolIsCreateNewList ) {
					strUrl += '&is_new_list=1';
				}

				if( true == boolIsEmergencyTextMessageList ) {
					strUrl += '&is_emergency_text=1'
				}
			}

			psi.patterns.addDialogContent( {
				title: strTitle,
				strUrl: strUrl,
				onCloseCallback: function( event ) {
					objThisRef.loadScheduledEmailFilterLists();
					if( event.hasOwnProperty( 'originalEvent' ) ) {
						GtmTracking.addModalTimestampComplete( 'select recipients', 'generate list', 'create new email > create list' );
					} else {
						GtmTracking.addModalTimestampComplete( 'select recipients', 'close', 'create new email > create list' );
					}
				}
			} );
		},
		createAttachments: function() {
			var objThisRef = this;
			$( '#uploadFileButton' ).click( function( event ) {
				var intMaxUpload =  MAX_FILE_UPLOAD_SIZE * 1024 *1024;
				var boolMaxUpload = true;
				$('.email_template_file_name, #email_template_file_name').each(function(){
					for( var intIndex = 0; intIndex < this.files.length; intIndex++ ) {
						if( undefined != this.files[intIndex] && intMaxUpload < this.files[intIndex].size && 0 < this.files[intIndex].size ) {
							boolMaxUpload = false;
							break;
						}
					}
				});

				if( false == boolMaxUpload ) {
					var strMessage = __( 'Failed to upload file. File should not be larger than {%d, max_upload} MB.', { max_upload: MAX_FILE_UPLOAD_SIZE } );
					$( '#upload_file_msg' ).html( '<p class="alert error slim"><i></i>' + strMessage + '</p>' ).show().delay( 3000 ).fadeOut( 1000 );
					GtmTracking.addError( 'modal interaction', '', 'upload', 'create new email > upload', strMessage );
					return false;
				}

				var strFileName = $( "#email_template_file_name" ).val();

				if( '' == strFileName ) {
					objThisRef.showMessage( 'error', __( 'Please select a file to upload' ), 'upload_file_msg' );
					GtmTracking.addError( 'modal interaction', '', 'upload', 'create new email > upload', 'Please select a file to upload' );
				} else {
					psi.patterns.showLoadingImage( {
						strElementSelector: '#create_email_attachment_dlg'
					} );
					$( '#form_upload_email_attachment' ).ajaxSubmit( {
						target: '#create_email_attachment_dlg',
						dataType: 'json',
						success: function( returnedData ) {
							for( var i = 0; i < returnedData.length; i++ ) {
								if( true == returnedData[i].status ) {

									objThisRef.addFileAttachment( returnedData[i].id, returnedData[i].title );
									$( '#create_email_attachment_dlg' ).dialog( 'close' );
								} else {
									objThisRef.showMessage( 'error', returnedData[i].message, 'upload_file_msg' );
									GtmTracking.addError( 'modal interaction', '', 'upload', 'create new email > upload', returnedData[i].message );
									$( '#form_upload_email_attachment' )[0].reset();

									var fileLabel = $( '#form_upload_email_attachment' ).find( 'label.file-label' );
									if( 0 !== fileLabel.length ) {
										fileLabel.find('span').text( __( 'Choose File' ) );
									}
								}
							}

							objThisRef.ajaxSaveScheduledEmail();

							psi.patterns.removeLoadingImage( {
								strElementSelector: '#create_email_attachment_dlg'
							} );
						}
					} );
				}
				return false;
			} );

			$('#email_template_file_name').change( function() {
				MessageCenter.ScheduledEmail.validateFileExtension( this );
			} );
		},
		addFileAttachment: function( intFileId, strFileTitle ) {
			var objThisRef = this;
			if( $( '.file_attachments[value=""]' ).length > 0 ) {
				$( 'input.file_attachments[value=""]:first' ).attr( { 'value': intFileId, 'title': strFileTitle } );
			}

			objThisRef.updateFileAttachmentList();
		},
		updateFileAttachmentList: function() {
			var objThisRef = this;

			$( '#attachedFileList' ).html( '' );

			$( '.file_attachments' ).each( function( index ) {
				if( '' != $( this ).attr( 'value' ) ) {
					var intFileId = $( this ).attr( 'value' );
					var strFileTitle = $( this ).attr( 'title' );

					var strFileLink = '';
					strFileLink += "<li class='margin5-bottom js-attached-file' id='file_attachment_" + intFileId + "'>";
					strFileLink += "<a href='#' class='js-remove-file margin5-right' onclick='psi.MessageCenterEmail.deleteFileAttachment(" + intFileId + ");'><i class='trash'></i></a>";
					strFileLink += "<a href='#' onclick='psi.MessageCenterEmail.downloadFileAttachment(" + intFileId + ");'>" + strFileTitle + "</a>";
					strFileLink += "</li>";

					$( '#attachedFileList' ).append( strFileLink );
				}
			} );
			if( 0 < $( ".file_attachments[value='']" ).length ) {
				$( '.js-add-attachments' ).show();
			} else {
				$( '.js-add-attachments' ).hide();
			}

		},
		deleteFileAttachment: function( intFileId ) {
			var objThisRef = this;

			psi.patterns.ajaxRequest( {
				url: objThisRef.exitTags.delete_email_attachment + '&file[id]=' + intFileId,
				type: 'POST',
				dataType: 'json',
				success: function( objResponse ) {
					if( true == objResponse.status ) {
						$( ".file_attachments[value='" + intFileId + "']" ).attr( { 'value': '', 'title': '' } );
						objThisRef.updateFileAttachmentList();
						objThisRef.ajaxSaveScheduledEmail();
					} else {
						objThisRef.showMessage( 'warning', objResponse.message, 'ajax_save_message', 2000 );
						GtmTracking.addError( 'modal interaction', '', 'delete attachment', 'create new email', objResponse.message );
					}
				}
			} );
		},
		downloadFileAttachment: function( intFileId ) {
			var objThisRef = this;
			window.onbeforeunload = null;
			$( 'html' ).unbind( "keydown.esc" ).bind( 'keydown.esc', null );

			location.href = objThisRef.exitTags.download_email_attachment + '&file[id]=' + intFileId;
		},
		validateBeforeSave: function() {
			var objThisRef = this;

			if( false == objThisRef.checkFromEmailAddress() ) {
				return false;
			}

			return true;
		},
		ajaxSaveScheduledEmail: function( strAction, boolIsValidate, boolShowSuccessMessage ) {

			var objThisRef = this;
			var strUrlParameters = '&is_ajax_save=1' + '&from_dashboard=' + psi.MessageCenterEmail.boolIsFromDashboard + '&is_lead_email=' + psi.MessageCenterEmail.boolIsLeadEmail;

			if( 'undefined' == typeof boolIsValidate ) {
				boolIsValidate = false;
			}

			if( 'undefined' == typeof boolShowSuccessMessage ) {
				boolShowSuccessMessage = false;
			}

			if( true == boolIsValidate && false == objThisRef.validateBeforeSave() ) {
				return false;
			}

			if( $( '#scheduled_email_subject' ).val().match( strSubjectRegex ) ) {
				objThisRef.showMessage( 'error', strEmailSubjectHtmlContentOrSlashError, 'select_recipient_response_message' );
				GtmTracking.addError( 'modal interaction', '', 'save', 'create new email', strEmailSubjectHtmlContentOrSlashError );
				return false;
			}

			if( $( '.cke_focus' ).attr( 'title' ) ) {
				objThisRef.focusOutAndSaveContentData();
			}

			if( 1 > $( '#auto_save_flag' ).length ) {
				clearTimeout( objThisRef.objAutoSaveCall );
				return;
			}

			if( false == $.isEmptyObject( objAutoSaveRequest ) && 4 != objAutoSaveRequest.readyState ) {
				setTimeout( function() {
					MessageCenter.ScheduledEmail.ajaxSaveScheduledEmail();
				}, 5000 );
				return;
			}

			objThisRef.objAutoSaveRequest = psi.patterns.ajaxRequest( {
				type: 'POST',
				url: objThisRef.exitTags.insert_or_update_scheduled_email + strUrlParameters,
				data: $( '#form_scheduled_email_compose_message' ).serialize(),
				dataType: 'json',
				beforeSend: function() {
					if( true == boolShowSuccessMessage ) {
						objThisRef.showMessage( 'warning', __( 'Saving your changes...' ), 'select_recipient_response_message', 0 );
					}
				},
				success: function( objResponse ) {
					objThisRef.removeMessage( 'select_recipient_response_message' );

					if( false == objResponse.status ) {
						objThisRef.showMessage( 'error', objResponse.message, 'select_recipient_response_message' );
						GtmTracking.addError( 'modal interaction', '', 'save', 'create new email', objResponse.message );
						return false;
					}

					$( '#scheduled_email_id' ).val( objResponse.scheduled_email_id );
					$( '#choose_template' ).data( 'scheduled-email-id', objResponse.scheduled_email_id );
					$( '#choose-template' ).data( 'scheduled-email-id', objResponse.scheduled_email_id );

					if( 'undefined' != typeof strAction && 'close' == strAction ) {
						objThisRef.isReuseEmail = false;
						psi.patterns.closeLargeDialog();
					}
				}
			} );

			if( (0 < $( '#auto_save_flag' ).length) && (0 < $( '#scheduled_email_id' ).val()) ) {
				clearTimeout( objThisRef.objAutoSaveCall );
				objThisRef.objAutoSaveCall = setTimeout( function() {
					objThisRef.ajaxSaveScheduledEmail()
				}, objThisRef.AUTOSAVE_TIME );
			}
		},
		validateYear: function( strDate ) {
			var arrmixSeparator = strDate.replace(/\d/g,'');
			var arrstrSplittedDate = strDate.split( arrmixSeparator.charAt(0) );
			for( var intIndex = 0; intIndex < arrstrSplittedDate.length; intIndex++ ) {
				if( 2 < arrstrSplittedDate[intIndex].length ) {
					if( 4 < arrstrSplittedDate[intIndex].length ) {
						psi.MessageCenterEmail.showMessage( 'error', 'Please add a valid date', 'select_recipient_response_message' );
						return false;
					}
					break;
				}
			}
			return true;
		},
		Preview: {
			init: function() {
				var objThisRef = this;
				psi.patterns.bindEssentials();
				var propertiesSelectionChanged = false;

				$( document ).ready( function() {
					objThisRef.loadRecipientListComboBox();
					objThisRef.loadPropertyComboBox();
					objThisRef.loadRecipientComboBox();

					if( '' == $( '#scheduled_email_subject' ).val() ) {
						$( '#send_test_email' ).addClass( 'disabled' );
					}

					$( '#content_update' ).click( function() {
						var strMode = $( this ).data( 'mode' );
						objThisRef.showScheduledEmailContentPreview( strMode, this );
					} );

					$( '#desktop_button' ).click( function() {
						objThisRef.showScheduledEmailContentPreview( 'desktop', this );
					} );

					$( '#mobile_button' ).click( function() {
						objThisRef.showScheduledEmailContentPreview( 'mobile', this );
					} );

					$( '#pdf_message_content' ).click( function() {
						objThisRef.pdfMessageContent();
					} );

					$( '#print_message_content' ).click( function() {
						objThisRef.printMessageContent();
					} );

					if( '' == $( "#preview_recipient_id" ).val() ) {
						$( '#recipient_name' ).text( 'No {$scheduled_email_type} found' );
					}

					$( '#send_test_email' ).click( function() {
						if( true == $( this ).hasClass( 'disabled' ) ) {
							return false;
						}

						objThisRef.sendTestEmail();
					} );

					$( '#email-preview' ).on( 'keypress', '.tabindex-action', function( e ) {
						if( 13 == e.which ) {
							$( this ).trigger( 'click' );
						}
						return false;
					} )

					objThisRef.showScheduledEmailContentPreview( 'desktop', this );
				} );
			},
			showMessage: function( strMessageType, strMessage, strLocation, intMessageTime ) {
				var strMessageDiv = strLocation || 'ajax_save_response';
				var intMessageTime = intMessageTime || 7000;

				$( '#' + strMessageDiv ).html( '<p class="alert ' + strMessageType + ' slim"><i></i>' + strMessage + '</p>' );
				$( '#' + strMessageDiv ).show().delay( intMessageTime ).fadeOut();

				$( 'html, body, form, div' ).animate( { scrollTop: '0px' }, 1 );
			},
			validateFromEmail: function( strEmail ) {
				var pattern = /^([A-Za-z0-9_\-\.])+\@([A-Za-z0-9_\-\.])+\.([A-Za-z]{2,4})$/;

				if( pattern.test( strEmail ) ) {
					return true;
				} else {
					return false;
				}
			},
			sendTestEmail: function() {
				var objThisRef = this;
				var strMsg = '';
				var boolValidEmail = true;
				var strSendCopyToValue = $( '#test_email_addresses' ).val();

				if( '' == strSendCopyToValue || strSendCopyToValue.indexOf( ';' ) > -1 || strSendCopyToValue.indexOf( ':' ) > -1 ) {
					boolValidEmail &= false;
					strMsg = __( 'Provide valid email address(es) separated by commas.' );
				} else {
					var arrstrEmailAddresses = strSendCopyToValue.split( ',' );
					var intLenghtOfArrayOfEmailAddresses = arrstrEmailAddresses.length;
					if( MAX_TEST_EMAIL_COUNT < intLenghtOfArrayOfEmailAddresses ) {
						strMsg = __( 'The number of recipients in the test email field is limited to '+MAX_TEST_EMAIL_COUNT+'.' );
						boolValidEmail &= false;
					} else {
						for( var i = 0; i < intLenghtOfArrayOfEmailAddresses; i++ ) {
							if( false == objThisRef.validateFromEmail( $.trim( arrstrEmailAddresses[i] ) ) ) {
								boolValidEmail &= false;
								strMsg = __( 'Provide valid email address(es) separated by commas.' );
							}
						}
					}
				}

				if( false == boolValidEmail ) {
					objThisRef.showMessage( 'error', strMsg, 'preview_template_response_message' );
					GtmTracking.addError( 'modal interaction', '', 'send test email', 'create new email > email preview', strMsg );
					return false;
				}

				var strUrl = objThisRef.exitTags.send_test_email;
				strUrl += "&scheduled_email[id]=" + $( '#scheduled_email_id' ).val() + "&property_id=" + $( '#propertyListForsearch' ).val() + "&test_message[recipient_id]=" + $( "#preview_recipient_id" ).val() + "&test_message[lease_id]=" + $( "#preview_lease_id" ).val() + "&test_message[application_id]=" + $( "#preview_application_id" ).val() + "&recipient_list_id=" + $( "#selectedRecipientForsearch" ).val() + '&test_message[test_email_addresses]=' + $( '#test_email_addresses' ).val();

				psi.patterns.ajaxRequest( {
					type: 'POST',
					url: strUrl,
					data: $( '#test_email_container' ).serialize(),
					success: function( returnedData ) {
						var objJsonMsg = $.parseJSON( returnedData );

						if( true == objJsonMsg.status ) {
							objThisRef.showMessage( 'success', objJsonMsg.message, 'preview_template_response_message' );
						} else {
							objThisRef.showMessage( 'error', objJsonMsg.message, 'preview_template_response_message' );
							GtmTracking.addError( 'modal interaction', '', 'send test email', 'create new email > email preview', objJsonMsg.message );
						}
					}
				} );

			},
			loadRecipientListComboBox: function() {
				var objThisRef = this;

				$( '#searchRecipientListCombobox' ).val( $( 'option:selected', '#selectedRecipientForsearch' ).data( 'title' ) )
				$( '#searchRecipientListCombobox' ).psiSearchCombobox( {
					delay: 0,
					dataList: $( '#selectedRecipientForsearch' ),
					select: function( event, response ) {
						objThisRef.loadPropertiesList( response.item.data );
						$( '#selectedRecipientForsearch' ).val( response.item.data );
					}
				} );
			},
			loadPropertyComboBox: function() {
				var objThisRef = this;

				$( '#searchPropertyCombobox' ).val( $( 'option:selected', '#propertyListForsearch' ).data( 'title' ) )
				$( '#searchPropertyCombobox' ).psiSearchCombobox( {
					delay: 0,
					dataList: $( '#propertyListForsearch' ),
					select: function( event, response ) {
						objThisRef.loadPropertyRecipientsList( response.item.data );
						$( '#propertyListForsearch' ).val( response.item.data );
					}
				} );

			},
			loadPropertiesList: function( intScheduledEmailFilterId ) {
				var objThisRef = this;
				var strUrl = objThisRef.exitTags.preview_scheduled_email + "&preview_mode=desktop&scheduled_email_filter_ids=" + intScheduledEmailFilterId;

				psi.patterns.ajaxRequest( {
					url: strUrl,
					type: 'GET',
					success: function( data ) {
						$( '#properties_select_wrapper' ).html( data );
						objThisRef.loadPropertyComboBox();
					},
					complete: function() {
						objThisRef.loadPropertyRecipientsList( $( "#propertyListForsearch option:first" ).val() );
					}
				} );
			},
			loadRecipientComboBox: function() {
				var objThisRef = this;

				$( '#searchRecipientCombobox' ).val( $( 'option:selected', '#recipientsListForsearch' ).data( 'name' ) )
				$( '#searchRecipientCombobox' ).psiSearchCombobox( {
					delay: 0,
					dataList: $( '#recipientsListForsearch' ),
					select: function( event, response ) {
						$( '#preview_recipient_id' ).val( $( response.item.option ).data( 'recipient-id' ) );
						$( '#preview_lease_id' ).val( $( response.item.option ).data( 'lease-id' ) );
						$( '#preview_application_id' ).val( $( response.item.option ).data( 'application-id' ) );
						$( '#recipientsListForsearch' ).val( response.item.data );
						$( '#preview_recipient_filter_type_id' ).val( $( response.item.option ).data( 'recipient-filter-type-id' ) );
					}
				} );

			},
			loadPropertyRecipientsList: function( intPropertyId ) {
				var objThisRef = this;
				var strUrl = objThisRef.exitTags.preview_scheduled_email + "&preview_mode=desktop&scheduled_email_filter_ids=" + $( '#selectedRecipientForsearch' ).val() + "&property_id=" + intPropertyId;

				psi.patterns.ajaxRequest( {
					url: strUrl,
					type: 'GET',
					success: function( data ) {
						$( '#recipients_select_wrapper' ).html( data );
						objThisRef.loadRecipientComboBox();
					}
				} );

			},
			showScheduledEmailContentPreview: function( strPreviewMode, objElement ) {
				var objThisRef = this;
				var intScheduledEmailId = '';
				var emailContentPreviewUrl = '';

				if( $( '#scheduled_email_id' ).length ) {
					intScheduledEmailId = $( '#scheduled_email_id' ).val();
				}

				$( '#content_update' ).data( 'mode', strPreviewMode );

				emailContentPreviewUrl = objThisRef.exitTags.scheduled_email_content_preview + "&system_message_template_id=" + $( '#system_message_template_id' ).val() + "&scheduled_email[id]=" + intScheduledEmailId + "&property_id=" + $( '#propertyListForsearch' ).val() + "&recipient_id=" + $( "#preview_recipient_id" ).val() + "&lease_id=" + $( "#preview_lease_id" ).val() + "&application_id=" + $( "#preview_application_id" ).val() + "&recipient_list_id=" + $( "#selectedRecipientForsearch" ).val() + "&recipient_filter_type_id=" + $("#preview_recipient_filter_type_id").val();

				var message_preview_iframe = document.createElement( "IFRAME" );
				message_preview_iframe.id = "message_preview_iframe";
				message_preview_iframe.setAttribute( "src", emailContentPreviewUrl );

				var previewContainer = ('mobile' == strPreviewMode) ? '#mobile_iframe_holder' : '#desktop_iframe_holder';
				var emptyContainer = ('mobile' == strPreviewMode) ? '#desktop_iframe_holder' : '#mobile_iframe_holder';
				var activeButton = ('mobile' == strPreviewMode) ? '#mobile_button' : '#desktop_button';
				var disableButton = ('mobile' == strPreviewMode) ? '#desktop_button' : '#mobile_button';

				$( emptyContainer ).html( '' );
				$( emptyContainer ).addClass( 'hide' );
				$( previewContainer ).removeClass( 'hide' );
				$( previewContainer ).html( message_preview_iframe );

				if( 'mobile' == strPreviewMode ) {
					message_preview_iframe.style.width = 254 + "px";
					message_preview_iframe.style.height = "84%";
					message_preview_iframe.frameborder = "0";
				} else {
					var intDialogHeight = ($( window ).height() < 700) ? 350 : 550;
					intDialogHeight = intDialogHeight - 10 - parseInt( $( '#attachment_holder' ).height() );

					$( '.desktop_holder' ).height( intDialogHeight );

					message_preview_iframe.style.width = 680 + "px";
					message_preview_iframe.style.height = intDialogHeight + "px";
					message_preview_iframe.style.border = "none";
					message_preview_iframe.scrolling = "auto";
				}

				psi.patterns.showLoadingImage( {
					strElementSelector: previewContainer
				} );

				message_preview_iframe.onload = function() {
					psi.patterns.removeLoadingImage( {
						strElementSelector: previewContainer
					} );

					objThisRef.setEmailTemplatePreviewData();
				}

			},
			setEmailTemplatePreviewData: function() {
				$( '#previewAttachedFileList' ).html( '' );
				var strFileLink = '';

				$( '.file_attachments' ).each( function( index ) {
					if( '' != $( this ).attr( 'value' ) ) {
						var intFileId = $( this ).attr( 'value' );
						var strFileTitle = $( this ).attr( 'title' );
						strFileLink += "<li><i class='attach'></i><a href='#' onclick='psi.MessageCenterEmail.downloadFileAttachment(" + intFileId + ");'>" + strFileTitle + "</a></li>";
					}
				} );

				if( '' != strFileLink ) {
					$( '#previewAttachedFileList' ).append( '<strong>' + __( 'File attachments:' ) + '</strong>' + strFileLink );
				}
			},
			pdfMessageContent: function() {
				var objThisRef = this;
				var intScheduledEmailId = '';

				if( $( '#scheduled_email_id' ).length ) {
					intScheduledEmailId = $( '#scheduled_email_id' ).val();
				}

				window.location.href = objThisRef.exitTags.scheduled_email_content_preview + "&load_pdf=1" + "&system_message_template_id=" + $( '#system_message_template_id' ).val() + "&scheduled_email[id]=" + intScheduledEmailId + "&property_id=" + $( '#propertyListForsearch' ).val() + "&recipient_id=" + $( "#preview_recipient_id" ).val() + "&lease_id=" + $( "#preview_lease_id" ).val() + "&application_id=" + $( "#preview_application_id" ).val() + "&recipient_list_id=" + $( "#selectedRecipientForsearch" ).val() + "&recipient_filter_type_id=" + $("#preview_recipient_filter_type_id").val();

			},
			printMessageContent: function() {
				var objThisRef = this;
				var printIframe = document.getElementById( "message_preview_iframe" ).contentWindow

				printIframe.print();
			}

		},
		getCookie: function( name ) {
			var arrDocumentCookie = document.cookie;
			var strPrefix = name + "=";
			var intBegin = arrDocumentCookie.indexOf( "; " + strPrefix );
			if( intBegin == -1 ) {
				intBegin = arrDocumentCookie.indexOf( strPrefix );
				if( intBegin != 0 ) return null;
			} else
				intBegin += 2;
			var intEnd = document.cookie.indexOf( ";", intBegin );
			if( intEnd == -1 )
				intEnd = arrDocumentCookie.length;
			return unescape( arrDocumentCookie.substring( intBegin + strPrefix.length, intEnd ) );

		},
		createTemporaryScheduledEmailFilter: function( objThisRef ) {
			var strRequestData = $( '#frm-view-data-filters2' ).serialize();

			if( false == recordSelection.validateSelectedRecords( { "strFormId" : "frm_customers" } ) || false == recordSelection.validateSelectedRecords( { "strFormId" : "frm_applications" } ) ) {
				alert( __('Please select at least one record.') );
				return;
			}

			psi.patterns.showLoadingImage( {
				strElementSelector:'#div-view-listing'
			} );

			if( true == psi.MessageCenterEmail.boolIsLeadEmail ) {
				strRequestData += '&application[ids]=' + $.makeArray( objSelectedRecordsIds.ids ) + '&is_lead_email=1';
			} else {
				strRequestData += '&lease_customer[ids]=' + $.makeArray( objSelectedRecordsIds.leaseCustomerIds )
			}

			psi.patterns.ajaxRequest( {
				type: 'POST',
				url: this.exitTags.ajax_save_scheduled_email_filter + '&return_json_response=true&from_dashboard=true&save_list=true' + '&is_lead_email=' + psi.MessageCenterEmail.boolIsLeadEmail,
				data: strRequestData,
				dataType: 'json',
				success: function( objResponse ) {
					psi.patterns.removeLoadingImage( {
						strElementSelector:'#div-view-listing'
					} );
					if( true == objResponse.status ) {
						psi.MessageCenterEmail.strListHTML = objResponse.list_html;
						psi.MessageCenterEmail.intTemporaryFilterListId = objResponse.filter_id;
						psi.MessageCenterEmail.boolShowAllFeatures = objResponse.show_all_features;
						psi.MessageCenterEmail.strBlockedRecipients = objResponse.blocked_recipients;
						objThisRef.loadComposeMessage( false, 'step-2', false, objResponse.filter_id );
					} else {
						alert( objResponse.message );
					}
				}
			} );
		}
	};
})( window, jQuery );
