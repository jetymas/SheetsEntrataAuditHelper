	var arrintToolTipKeyCount = new Array();

	function generateToolTip( strToolTipKey, strEvent, boolIsToolTipRevisionChange, boolIsPsAdminRequest, boolAddIcon, strToolTipTextColor, strEditTooltip, boolIsShowHistory ) {

		var strSelectedGroupPropertySetting = '';
		var intPropertyId = '';

		if( 'undefined' !== typeof PROPERTY_ID && null != PROPERTY_ID ) {
			intPropertyId = PROPERTY_ID;
		}
		if( 'undefined' !== typeof SELECTED_GROUP_PROPERTY_SETTINGS && null != SELECTED_GROUP_PROPERTY_SETTINGS ) {
			strSelectedGroupPropertySetting = SELECTED_GROUP_PROPERTY_SETTINGS;
		}

		jQuery( '.bt-content' ).remove();
		jQuery( 'canvas' ).remove();

		var strType = strToolTipKey.substring( 0, 5 );
		if( 'EDIT_' == strType ) {
			strEditTooltip = strType;
			strToolTipKey = strToolTipKey.substring( 5 );
		} else {
			strEditTooltip 		= '';
			strEditTooltipUrl	= '';
		}

		var boolIsToolTipKeyAvailable = false;
		var strIcon		= '';
		var strToolTip	= '';
		var textColor	= '';
		arrintToolTipKeyCount[strToolTipKey] = 1;

		if( 'undefined' == typeof strEditTooltip || null == strEditTooltip ) {
			strEditTooltip 		= '';
			strEditTooltipUrl	= '';
		} else {
			strEditTooltipUrl	= '&edit_tooltip=' + strEditTooltip;
		}

		if( 'undefined' == typeof boolIsToolTipRevisionChange ) boolIsToolTipRevisionChange = true;
		if( 'undefined' == typeof strEvent ) strEvent = 'view';
		if( 'undefined' == typeof boolIsPsAdminRequest ) boolIsPsAdminRequest = 0;
		if( 'undefined' == typeof boolAddIcon ) boolAddIcon = true;
		textColor = ( 'undefined' == typeof strToolTipTextColor )?'': strToolTipTextColor;

		if( 'undefined' === typeof boolIsShowHistory || null === boolIsShowHistory ) {
			boolIsShowHistory = false;
		}

		var strAjaxPath = '?module=tool_tips&action=' + strEvent + '_tool_tip&tool_tip[key]=' + strToolTipKey + '&setting_location=' + strSelectedGroupPropertySetting + '&property_id=' + intPropertyId + '&tool_tip_id=' + arrstrAvailableToolTipsKey[strToolTipKey] + '&bool_is_ps_admin_request=' + boolIsPsAdminRequest + '&bool_add_icon=' + boolAddIcon + strEditTooltipUrl + '&is_show_history=' + boolIsShowHistory;
		var strAjaxPathToolTipAddition = '/?module=tool_tips&action=send_tooltip_request&is_show_tooltip_link=1&tool_tip[key]=' + strToolTipKey + '&setting_location=' + strSelectedGroupPropertySetting + '&property_id=' + intPropertyId + '&is_for_tool_tip_addition_request_view=1';

		( 'undefined' == typeof arrstrAvailableToolTipsKey[strToolTipKey] ) ? boolIsToolTipKeyAvailable = false : boolIsToolTipKeyAvailable = true;

		( true == boolIsToolTipKeyAvailable ) ? strIcon	= 'images/help_balloon/icon.gif' : strIcon	= 'images/help_balloon/icon-gray.gif';

		if( 'edit' == strEvent || false == boolIsToolTipKeyAvailable ) {
			boolIsToolTipRevisionChange 	= true;
			boolClickAnywhereToClosefalse	= false;
			boolCloseWhenOthersOpen 		= false;
		} else {
			boolClickAnywhereToClosefalse	= true;
			boolCloseWhenOthersOpen 		= true;
		}

		if( true == boolIsToolTipRevisionChange ) strAjaxPath = strAjaxPath + '&' + Math.random();

		var strToolTipElement = strEditTooltip + strToolTipKey;

		if( true == boolAddIcon ) {
			strToolTip = 'img_' + strToolTipElement;
		} else {
			strToolTip = strToolTipElement;
		}

		if( true == boolIsToolTipKeyAvailable || ( false == boolIsToolTipKeyAvailable && true == boolIsSupportUser ) ) {

			if( true == boolAddIcon ) {
				jQuery( '[id=\'' + strToolTipElement + '\']' ).html( '<img id="img_' + strToolTipElement + '" style="cursor:pointer;" src="' + strIcon + '" bt-xtitle="" title="">' );
			}

			var strTargetLocalParam = '';

			if( undefined != psi.objProperty ) {
				strTargetLocalParam = psi.objProperty.getLocaleCodeQueryString();
			} else if( undefined != psi.objCompanySetup ) {
				strTargetLocalParam = psi.objCompanySetup.getLocaleCodeQueryString();
			}

			jQuery( '[id=\'' + strToolTip + '\']' ).bt({
				trigger				: ['click'],
				width				: 300,
				ajaxPath			: strAjaxPath + '&is_show_tooltip_link=1' + strTargetLocalParam,
				clickAnywhereToClose: boolClickAnywhereToClosefalse,
				closeWhenOthersOpen	: boolCloseWhenOthersOpen,
				cssStyles			: {color: textColor},
				ajaxCache			: true,
				postShow			: function() {
					if( 1 != boolIsSupportUser ) {
						if( 2 < parseInt( arrintToolTipKeyCount[strToolTipKey] ) && typeof Ajax !== "undefined" ) {
							new Ajax.Request( "/?module=tool_tips&action=view_tool_tip&tool_tip[key]=" + strToolTipKey + "&setting_location=" + strSelectedGroupPropertySetting + "&property_id=" + intPropertyId + "&is_for_tool_tip_view=1&tool_tip_id=" + arrstrAvailableToolTipsKey[strToolTipKey] + "&bool_is_ps_admin_request=" + boolIsPsAdminRequest + strEditTooltipUrl, {
								asynchronous: false,
								method: "get"
							});
						}
						if( 3 > parseInt( arrintToolTipKeyCount[strToolTipKey] ) ) {
							arrintToolTipKeyCount[strToolTipKey]++;
						}
					}
					jQuery( "#viewToolTip" ).css( "height", "auto" );
				}
			});

			if( 'edit' == strEvent ) {
				jQuery( '[id=\'' + strToolTip + '\']' ).btOn();
			}

		} else if ( false == boolIsToolTipKeyAvailable ) {

			boolClickAnywhereToClosefalse = true;
			boolCloseWhenOthersOpen		  = true;

			jQuery( '[id=\'' + strToolTip + '\']' ).bt({
				trigger				: ['click'],
				width				: 300,
				ajaxPath			: strAjaxPathToolTipAddition,
				clickAnywhereToClose: boolClickAnywhereToClosefalse,
				closeWhenOthersOpen	: boolCloseWhenOthersOpen,
				cssStyles			: {color: textColor},
				ajaxCache			: true,
				postShow			: function() {
					if( 1 != boolIsSupportUser ) {
						if( 2 < parseInt( arrintToolTipKeyCount[strToolTipKey] ) && typeof Ajax !== "undefined" ) {
							new Ajax.Request( strAjaxPathToolTipAddition, {
								asynchronous: false,
								method: "get"
							});
						}
						if( 3 > parseInt( arrintToolTipKeyCount[strToolTipKey] ) ) {
							 arrintToolTipKeyCount[strToolTipKey]++;
						}
					}
					jQuery( "#viewToolTip" ).css( "height", "auto" );
				}
			});

		}

		jQuery( '[id=\'' + strToolTip + '\']' ).bind( 'click', function() {
			if( jQuery( '#addEditToolTip_' + strToolTipKey ).length ) {
				generateToolTip( strToolTipKey, 'view', false, 0, boolAddIcon, '', strEditTooltip );
				jQuery( '#' + strToolTip ).btOn();
			}
		});
	}

	function loadToolTip( strToolTipKey, strEditTooltip, boolIsShowHistory ) {
		if( "undefined" == typeof strEditTooltip ) {
			strEditTooltip = null;
		}

		if( "undefined" == typeof boolIsShowHistory ) {
			boolIsShowHistory = false;
		}

		// avoid multiple calls
		if( !jQuery( "#" + strToolTipKey ).data( "tooltip-applied" ) ) {
			jQuery( "#" + strToolTipKey ).data( "tooltip-applied", true );
			generateToolTip( strToolTipKey, "view", true, 0, 0, "", strEditTooltip, boolIsShowHistory );
		}
	}
