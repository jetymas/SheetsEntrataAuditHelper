psi.objCustomers = function() {

	var init = function( tableId, containerId ) {

		var formId			= 'frm_customers';
		var strReloadUrl	= $( "table#" + tableId ).attr( 'custom_load_url' );

		$( ".check-all-page" ).click(
			function () {
				psi.patterns.checkAllPage( formId, "customer[ids][]", { "callback" : true, "strSelectedItem" : "customers" } );
		} );

		$( "#checkAll" ).on( 'click', function() {

			if( 0 >= $( '.extra-line' ).length && this.checked ) {
				$extraLine = $( '#property-1' ).find( 'tr' ).first().clone();
				$extraLine.addClass( 'extra-line' );
				$( '#property-1' ).find( 'tr' ).first().after( $extraLine );
			} else {
				$( '#property-1 .extra-line' ).remove();
				$( '#div-selection-notes' ).hide();
				recordSelection.deselectAllRecords();
			}
		} );

		$( "table#" + tableId + ' .load-customer-view' ).click(

			function() {
				if( 0 < $(this).data( 'lease-id' ) && 0 < $(this).data( 'lease-customer-id' ) ) {

					psi.objCustomers.openLease( $(this).data( 'lease-id' ), $(this).data( 'lease-customer-id' ), $(this).data( 'is-corporate-tab' ) );
				}
		} );

		$( '.customersToggleCheck' ).on( 'click', function( event ) {
			event.stopImmediatePropagation();
			var objJson = $( this ).data( 'json' );

			if( undefined !== objJson && typeof objJson != 'object') {
				var objJson = $.parseJSON(objJson);
				objJson.callback = true;
			}

			$( 'table.clickable' ).find( 'input:checkbox' ).each( function() {

				if( true == this.checked ){
					recordSelection.addNewValueInObject( objSelectedRecordsIds.ids, this.value );
					recordSelection.addNewValueInObject( objSelectedRecordsIds.leaseCustomerIds, $(this).attr('lease_customer_id') );
				} else {
					var objData = objSelectedRecordsIds.leaseCustomerIds;
					var intIndex = objData.indexOf( $(this).attr('lease_customer_id') );
					if( -1 < intIndex ) {
						recordSelection.unsetValuesFromObject( objSelectedRecordsIds.ids, this.value );
						objData.splice(intIndex, 1);
					}
				}
			} );

			if( 0 < $( '.extra-line' ).length ) {
				$( '#property-1 .extra-line' ).remove();
				$( '#div-selection-notes' ).hide();
			}

			// Logic to uncheck the Select All checkbox when any individual checkbox is unchecked
			$( '#checkAll' ).prop( 'checked', false === $( '.customersToggleCheck' ).not( ':checked' ).length > 0 );
		} );

		$( ".create-customers-email" ).click(

			function() {
				GtmTracking.addComponentInteraction( 'email', 'general tab' );
				var strUrl			= $(this).data( 'url' );

				if( '' == strUrl || 'undefined' == strUrl ) return;

				if( false == recordSelection.validateSelectedRecords( { "strFormId" : formId } ) ) {
					alert( __('Please select at least one record.') );
					return;
				}
				psi.patterns.loadLargeDialog({
					title: __('Create Email'),
					strUrl: strUrl + '&' + $('#'+formId).serialize(),
					ckeditor: true,
					data: { 'lease_customer[ids]' : $.makeArray( objSelectedRecordsIds.leaseCustomerIds ), },
					onCloseCallback: function() {
						psi.patterns.ajaxRequest( { url: strReloadUrl, strElementSelector:'#' + containerId } );
					}
				} );
		} );

		$( ".create-customers-message" ).click(

			function() {
				GtmTracking.addComponentInteraction( 'email > text', 'general tab' );
				var strUrl			= $(this).data( 'url' );

				if( '' == strUrl || 'undefined' == strUrl ) return;

				if( false == recordSelection.validateSelectedRecords( { "strFormId" : formId } ) ) {
					alert( __( 'Please select at least one record.' ) );
					return;
				}

				psi.patterns.loadDialog({
					width: 790,
					height: 650,
					title: __( 'Create Text Message' ),
					strContentId: 'create_customers_message',
					strUrl: strUrl + '&' + $('#'+formId).serialize(),
					ckeditor: true,
					data: { 'customer[ids]' : $.makeArray( objSelectedRecordsIds.ids ), } ,
					onCloseCallback: function() {
						psi.patterns.ajaxRequest( { url: strReloadUrl, strElementSelector:'#' + containerId } );
					}
				} );
		} );

		$( ".create-customers-document" ).click(


			function() {
				GtmTracking.addComponentInteraction( 'email > document', 'general tab' );
				var strUrl			= $(this).data( 'url' );
				var strSelectedLeaseIdsForBulkGeneration;

				if( '' == strUrl || 'undefined' == strUrl ) return;

				if( false == recordSelection.validateSelectedRecords( { "strFormId" : formId } ) ) {
					alert( __( 'Please select at least one record.' ) );
					return;
				}

				var selectedLeases = new Array();
				var strSubQueryString = '';
				$('[type=checkbox][name="customer[ids][]"]:checked').each(function() {
					selectedLeases.push( $(this).attr('lease_id'));
				});

				if ( '' == $.makeArray( objSelectedRecordsIds.leaseIds ) ) {
					strSelectedLeaseIdsForBulkGeneration = selectedLeases.join(',');
				}else{
					strSelectedLeaseIdsForBulkGeneration =  $.makeArray( objSelectedRecordsIds.leaseIds ).join(',');
				}

				$('#frm_customers_lease_data').find('#lease_ids').val(strSelectedLeaseIdsForBulkGeneration);

				psi.patterns.loadDialog({
					width: 700,
					height: 400,
					title: __( 'Add Document' ),
					strContentId: 'upload_documents_dlg',
					ckeditor: true,
					onCloseCallback: function() {
						psi.patterns.ajaxRequest( { url: strReloadUrl, strElementSelector:'#' + containerId } );
					}
				} );

				psi.patterns.ajaxRequest( { url: strUrl, strElementSelector:'#upload_documents_dlg' , data: $('#frm_customers_lease_data').serialize(),
				beforeSend: function(){
					psi.patterns.showLoadingImage({ strElementSelector : '#upload_documents_dlg' });
					$('#frm_customers_lease_data').find('#lease_ids').val(strSelectedLeaseIdsForBulkGeneration);
				},
				success: function(  strResponse ) {
					$('#upload_documents_dlg').html( strResponse );
					psi.patterns.removeLoadingImage({ strElementSelector : '#upload_documents_dlg' });

				}
				} );

		} );

		$( ".create-customers-note" ).click(

			function() {
				GtmTracking.addComponentInteraction( 'email > note', 'general tab' );
				var strUrl			= $(this).data( 'url' );

				if( '' == strUrl || 'undefined' == strUrl ) return;

				if( false == recordSelection.validateSelectedRecords( { "strFormId" : formId } ) ) {
					alert( __( 'Please select at least one record.' ) );
					return;
				}

				var selectedLeases = new Array();
				var strSubQueryString = '';
				$('[type=checkbox][name="customer[ids][]"]:checked').each(function() {
					selectedLeases.push( $(this).attr('lease_customer_id'));
				});

				psi.patterns.loadDialog( {
					width:600,
					height:285,
					strUrl:'/?module=customers_systemxxx&action=create_customers_note',
					strContentId:'create_customers_note',
					title:__( 'Create Note' ),
					data:{
							'lease_customers[id]' : selectedLeases,
					},
					onCloseCallback: function() {
						psi.patterns.ajaxRequest( { url: strReloadUrl, strElementSelector:'#' + containerId } );
					}
				} );
        } );

		$( "#report_filterproperty_group_ids .form-multiselectbox" ).on( 'change', function(){

			var propertyGroupIds = [];
			$( 'input[name="report_filter[property_group_ids][]"]' ).each( function(index, element) {
				propertyGroupIds.push( element.value );
			});
			psi.patterns.ajaxRequest({
				url: reloadFilterDataUrl,
				data: { 'property_group_ids': propertyGroupIds },
				strElementSelector: 'building',
				success: function( strResponse ) {
					var parsedJson		= ( '{' == strResponse.substring( 0, 1 ) ) ? $.parseJSON( strResponse ) : {};
					var strHtml = '';

					if( 'success' == parsedJson.status ) {
						// Buildings
						if( null != parsedJson.building && 0 < parsedJson.building.length ) {

							strHtml = '<option value="0" selected="selected">'+ __( 'All Buildings' ) + '</option>'
							$.each( parsedJson.building, function(index, value) {
								strHtml += '<option value="' + value[0] + '">' + value[1] + '</option>'
							} );
							$( '#building' ).html( strHtml );

						} else {

							strHtml = '<option value="0" selected="selected">'+ __( 'All Buildings' ) + '</option>'
							$( '#building' ).html( strHtml );

						}
						// Lease Terms
						if( null != parsedJson.lease_terms && 0 < parsedJson.lease_terms.length ) {

							strHtml = '<li class="light-gray multi-header"><label><input class="form-checkbox select-all-drop" type="checkbox">'+ __( 'All Lease Terms' ) +'</label></li>'
							$.each( parsedJson.lease_terms, function(index, value) {
								strHtml += '<li><label><input type="checkbox" class="form-checkbox" value="' + value[0] + '" id="lease_terms_' + value[0] + '" name="report_filter[lease_terms][]">'+ value[1] + '</label></li>'
							} );
							$( '#lease_terms_filter_items' ).html( strHtml );

						} else {

							strHtml = '<li class="light-gray multi-header"><label><input class="form-checkbox select-all-drop" type="checkbox">'+ __( 'All Lease Terms' ) +'</label></li>'
							$( '#lease_terms_filter_items' ).html( strHtml );

						}
					} else {
					// Show Select All option by default if no other options
						strHtml = '<option value="0" selected="selected">'+ __( 'All Buildings' ) + '</option>'
						$( '#building' ).html( strHtml );
						strHtml = '<li class="light-gray multi-header"><label><input class="form-checkbox select-all-drop" type="checkbox">'+ __( 'All Lease Terms' ) +'</label></li>'
						$( '#lease_terms_filter_items' ).html( strHtml );
					}
				}
			});
		});

		$( '.generate-report.submit-filter' ).on( 'click', function( event ){
			var minDate = psi.objGenericListing.formatDate( $( 'input[name="report_filter[occupancy_date][min-date]"]' ).val() );
            var maxDate = psi.objGenericListing.formatDate( $( 'input[name="report_filter[occupancy_date][max-date]"]' ).val() );

            if( 'Invalid Date' == minDate && 'Invalid Date' == maxDate ) {
            	$( '#filter_errors' ).hide().html( '' );
            } else {
            	if( 'Invalid Date' == minDate || 'Invalid Date' == maxDate) {
					$( '#filter_errors' ).show().html( __( 'Occupancy Date: Occupancy start and end dates are both required.' ) );
					event.stopPropagation();
				} else {
					$( '#filter_errors' ).hide().html( '' );
				}
			}
		});

		if( true === Boolean( sessionStorage.getItem("isFromLeaseModificationApplication") ) ) {
			psi.patterns.showLoadingImage({ strElementSelector : '#div-customers' });
			var applicationid = sessionStorage.getItem("newapplicationid");
			var newleaseid = sessionStorage.getItem("newleaseid");
			var newcustomerid = sessionStorage.getItem("newcustomerid");
			var isCorporateTab = 'true';
			psi.objCustomers.openLease( newleaseid, newcustomerid, isCorporateTab );
			loadApplication(applicationid,'');
			psi.patterns.removeLoadingImage({ strElementSelector : '#div-customers' });
			sessionStorage.removeItem("isFromLeaseModificationApplication");

		}
	};

	var loadCurrentTab = function loadCurrentTab() {
		psi.patterns.ajaxRequest( { url: $( "table#tbl_customers").attr( 'custom_load_url' ), strElementSelector:'#div-view-listing'} );
	};

	var selectAllItems = function( strFormId, strChkBoxName ) {

		var strUrl	= $( ".check-all-page" ).data( 'url' );
		var objForm = $( 'form#' + strFormId );

		$( objForm ).find( "table.clickable" ).find( '[type=checkbox][name="' + strChkBoxName + '"]' ).prop( 'checked', true );

		if( 0 < $( objForm ).find( '#checkAll' ).length ) {
			$( objForm ).find( '#checkAll' ).prop( 'checked', true );
		}

		recordSelection.selectAllRecords( { "strFormId" : strFormId, "strChkBoxName" : strChkBoxName, "selectedTab" : "prospects", "strUrl" : strUrl } );
	};

	var deselectAllItems = function( strFormId, strChkBoxName ) {

		objForm = $( '#' + strFormId );

		$( objForm ).find( '#checkAll' ).prop( 'checked', false );

		if( undefined !== strChkBoxName ) {
			$( objForm ).find( "table.clickable" ).find( '[type=checkbox][name="' + strChkBoxName + '"]' ).prop( 'checked', false );
		} else {
			$( objForm ).find( "table.clickable" ).find( "input" ).prop( 'checked' , false );
		}

		recordSelection.deselectAllRecords();

		if( 0 < $( '.extra-line' ).length ) {
			$( '#property-1 .extra-line' ).remove();
			$( '#div-selection-notes' ).hide();
		}
	};

	var checkBoxSelectedCount = function() {

		var int_count = $( '#tbl_customers' ).find( 'input:checkbox:checked' ).length;

		return int_count;
	};

	var syncResidents = function( boolShowStatusMessage, propertyCount ) {
		psi.patterns.loadDialog( { width: 800, height: 600,strUrl: syncResidentsDataUrl + '&is_search=1&property_count='+propertyCount, strContentId: 'customer_system_confirm', title: 'Properties To Sync' } );
	}

	var retrieveCustomers = function() {
		var boolIsValid = true;
		var propertyGroupIds = [];
		$( 'input[name="report_filter[property_group_ids][]"]' ).each( function(index, element) {
			if( element.value == allPropertiesGroupId ) {
				boolIsValid = false;
			}
			propertyGroupIds.push( element.value );
		});

		if( 0 == propertyGroupIds.length || propertyGroupIds.length > 1 || false == boolIsValid ) {
			psi.patterns.loadDialog( { width: 600, height: 300, strUrl: residentSyncErrorMsgUrl, strContentId: 'customer_system_confirm', title: 'Property Error' } );
			manageDefaultText();
		} else {
			psi.patterns.ajaxRequest( { strElementSelector: '#div-view-listing', url: importCustomersByPropertyDataUrl + '&is_search=1', data: { 'property_group_ids': propertyGroupIds } } );
			manageDefaultText();
		}
	}

    var syncCustomerDocuments = function() {

		var propertyGroupIds = [];
		$( 'input[name="report_filter[property_group_ids][]"]' ).each( function(index, element) {
			propertyGroupIds.push( element.value );
		});

		if( 1 > propertyGroupIds.length ) {
    		psi.patterns.loadDialog( { width: 600, height: 300, strUrl: residentSyncErrorMsgUrl, strContentId: 'customer_system_confirm', title: 'Property Error' } );
    		manageDefaultText();
    	} else {
			psi.patterns.loadDialog( { width: 600, height: 400,strUrl: retrieveResidentDocuments + '&is_search=1&property_group_ids[]='+ propertyGroupIds, strContentId: 'customer_system_confirm', title: 'Properties To Sync For Documents' } );
			manageDefaultText();
		}
	}

	var openLease = function( lid, cid, isCorporateTab ) {
		if( true == isCorporateTab ) {
			psi.patterns.loadLargeDialog({
				strUrl: '/?module=customerxxx&lease[id]=' + lid + '&customer[id]=' + cid + '&is_corporate_tab=' + isCorporateTab,
				onCloseCallback: function() { psi.patterns.ajaxRequest( { url: $( "table#tbl_customers" ).attr( 'custom_load_url' ), strElementSelector:'#div-view-listing' } ); }
			});
		} else {
			reloadSearchList = function() { psi.patterns.ajaxRequest( { url: $( "table#tbl_customers" ).attr( 'custom_load_url' ), strElementSelector:'#div-view-listing' } ); }
			loadLeaseInLargeDialog( lid, cid );
		}
	}

	return {
		init : init,
		selectAllItems : selectAllItems,
		deselectAllItems : deselectAllItems,
		checkBoxSelectedCount : checkBoxSelectedCount,
		syncResidents: syncResidents,
		retrieveCustomers: retrieveCustomers,
		syncCustomerDocuments: syncCustomerDocuments,
		openLease:openLease,
		loadCurrentTab: loadCurrentTab
	};

}();