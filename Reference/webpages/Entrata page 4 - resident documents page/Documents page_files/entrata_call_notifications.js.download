
var objEntrataCallNotifications = function() {

	var intMaxVisibleNotifications = 5;
	var connection = '';
	var arrmixData = {};

	function setConnection( objConnection ) {
		connection = objConnection;
	}

	function initCallNotifications() {
		$( document )
			.on( "click", ".nAlert.call_incoming .nMessage", function() {
				var objCall = $(this).parent();
				loadApplicationOrResidentInfo( $( objCall ).data( "application-id" ), $(objCall).data( "call-id" ), { 'has_multiple_leads' : $( objCall ).data( "has-multiple-leads" ), 'customer_id' : $( objCall ).data( "customer-id" ), 'lease_id' : $( objCall ).data( "lease-id" ) } );
				deleteCallNotification( $(objCall).data( "call-id" ), $(objCall).data( "created-on" ) );
			} )
			.on( "click", ".js-notification.call_incoming", function() {
				loadApplicationOrResidentInfo( $(this).data( "application-id" ), $(this).data( "call-id" ), { 'has_multiple_leads' : $(this).data( "has-multiple-leads" ), 'customer_id' : $(this).data( "customer-id" ), 'lease_id' : $(this).data( "lease-id" ) } );
				deleteCallNotification( $(this).data( "call-id" ), $(this).data( "created-on" ) );
			} );
	}

	function handleCallNotifications( objMessage ) {
		var objDescription = objMessage.message.description;

		var strApplicantName = objDescription.caller_name;
		var intApplicationId = objDescription.application_id;
		arrmixData.has_multiple_leads = objDescription.has_multiple_leads;
		arrmixData.lease_id = objDescription.lease_id;
		arrmixData.customer_id = objDescription.customer_id;
		arrmixData.customer_name = objDescription.customer_name;
		if( false === arrmixData.has_multiple_leads && null === intApplicationId ) {
			intApplicationId = objMessage.message.description.application_id = null;
			strApplicantName = objMessage.message.description.caller_name = 'New Lead';
		}

		if( null !== arrmixData.customer_id && true == $.isNumeric( arrmixData.customer_id ) && null !== arrmixData.lease_id && true == $.isNumeric( arrmixData.lease_id ) ) {
			objMessage.message.description.caller_name = arrmixData.customer_name;
		}

		updateNotificationList( objMessage );

		var strCallback = function() {
			loadApplicationOrResidentInfo( intApplicationId, objDescription.call_id, arrmixData );
			deleteCallNotification( objDescription.call_id, objMessage.created_on );
		}

		var options = {
			title: strApplicantName,
			options: {
				body: objMessage.message.description.call_status_type + ' ' + __( ' Call' ),
				icon: objEntrataNotification.strIconUrl,
				lang: 'en-US',
				tag: 'call_' + intApplicationId,
				closeTime: 60*60*1000,
				requireInteraction: true,
				onClick: strCallback,
				storeObjects: true,
				onDenied: function() { displayNotification( objMessage ); }
			}
		};

		if( false === desktopNotification( options ) ) {
			// build popup
			displayNotification( objMessage );
		}
		return true;
	}

	function updateNotificationList( objMessage ) {
		var objNotificationList = $( "#notifyWrapper").find( ".notificationsWrapper .alertList");

		var objDescription = objMessage.message.description;
		var strCreatedOn = objMessage.created_on;
		var strApplicantName = objDescription.caller_name;
		var intApplicationId = objDescription.application_id;
		var intCid           = objDescription.cid;

		// if same call notification already exists in list then do nothing
		if( 0 < objNotificationList.find("li").find( "#call_" + intApplicationId ).length ) {
			return true;
		}

		var strNotificationHtml =  '<li data-created-on="' + strCreatedOn + '" data-customer-id="' + arrmixData.customer_id + '" data-lease-id="' + arrmixData.lease_id + '" data-has-multiple-leads="' + arrmixData.has_multiple_leads + '" data-call-id="' + objDescription.call_id + '" data-notification-id="' + objMessage.id + '" id="call_' + objDescription.call_id + '" class="js-notification call_incoming' + '" data-cid="' + intCid + '" data-call-incoming="1" data-applicant-name="' + strApplicantName + '" ' +
			'data-application-id="' + intApplicationId + '" data-expires-on="' + ( getCurrentUtcTime() + 60*60+1000 ) + '"><span class="bold"> ' + strApplicantName + ' </span><br>' +
			'<span class="nAlertText">' + objDescription.call_status_type + ' ' + __( "Call" ) + '</span><span class="date">' + __("Now") + '</span></li>';

		objNotificationList.find("li:first-child").after( strNotificationHtml );
		return true;
	}

	function deleteCallNotification( intCallId, strCallDatetime ) {
		$( "#call_" + intCallId ).remove();
		$( "#call_flyout_" + intCallId ).remove();

		psi.patterns.ajaxRequest( {
			url: '/?module=entrata_call_notificationxxx&action=delete_call_notifications',
			data: { call_id: intCallId, call_datetime: strCallDatetime }
		} );
		return true;
	}

	function displayNotification( objMessage ) {
		/*if( 0 < $( "#call_" + objDescription.application_id ).length ) {
			return true;
		}*/
		// var objDescription = objMessage.message.description;
		var intAutoHideAfter = 300;
		var strContainer = buildNotificationPopup( objMessage );

		$( strContainer )
			.appendTo( '.js-notifications .nAlertWrapper' )
			.delay( 2000 )
			.animate( { right: "+=360" }, 400, function() {
				// auto remove notification
				var objNotification = $( this );
				if( intMaxVisibleNotifications > objNotification.index() && true === $.isNumeric( intAutoHideAfter ) ) {
					setTimeout( function() {
						removeNotification( objNotification );
					}, intAutoHideAfter * 1000 );
				}
			} );

		return true;
	}

	function buildNotificationPopup( objMessage ) {
		var objDescription = objMessage.message.description;
		var strContainer = '<div data-customer-id="' + arrmixData.customer_id + '" data-lease-id="' + arrmixData.lease_id + '" data-has-multiple-leads="' + arrmixData.has_multiple_leads + '" data-call-id="' + objDescription.call_id + '" class="nAlert call_incoming" id="call_flyout_' + objDescription.call_id + '" data-cid="' + objDescription.cid  + '" data-auto_hide_after="300" data-notification-id="' + objMessage.id + '" data-application-id="' + objDescription.application_id + '"> \
									<div class="left text nMessage"> \
										<span class="bold">' + objDescription.caller_name + '</span><br> \
										<span class="nAlertText text-gray">' + objDescription.call_status_type + ' ' + __( "Call" ) + '</span> \
									</div> \
									<div class="snoozeWrapper right"> \
										<p class="link ignore option2">' + __("Ignore") + '</p> \
										<p class="link snooze option2">' + __("Snooze") + '</p> \
									</div> \
								</div>';
		return strContainer;
	}

	function removeNotification( obj, boolIsSnooze ) {

		obj.animate( { opacity: '0' }, 600, function() {
			obj.animate( { height: '0px' }, 300, function() {
				// Load next hidden Notification message and bind auto close event, if not already bind
				var objNextNotification = $( '.nAlertWrapper .nAlert:nth-child( ' + ( intMaxVisibleNotifications + 1 ) + ' ):not(.notification_close_binded)' );
				var intAutoHideAfter = parseInt( objNextNotification.data( 'auto_hide_after' ) );
				if( -1 != objNextNotification.index() && true === $.isNumeric( intAutoHideAfter ) ) {
					objNextNotification.addClass( 'notification_close_binded' );
					setTimeout( function() {
						removeNotification( objNextNotification );
					}, 5000 );
				}
				obj.remove();
			} );
		} );
	}

	function loadApplicationOrResidentInfo( intApplicationId, intCallId, arrmixApplicationData ) {

		if( null !== arrmixApplicationData.customer_id && true == $.isNumeric( arrmixApplicationData.customer_id ) && null !== arrmixApplicationData.lease_id && true == $.isNumeric( arrmixApplicationData.lease_id ) ) {
			psi.patterns.loadLargeDialog( {
				title: __( 'Resident information' ),
				strUrl:'/?module=customerxxx&lease[id]=' + arrmixApplicationData.lease_id + '&customer[id]=' + arrmixApplicationData.customer_id
			} );
		} else if( null !== intApplicationId && true == $.isNumeric( intApplicationId ) ) {
			var intTime = 0;
			if( 0 < $( "body" ).find( ".modal-large" ).length ) {
				intTime = 500;
				psi.patterns.closeLargeDialog();
			}

			setTimeout( function() {
				psi.patterns.loadLargeDialog( {
					title: __( 'Guestcard Details' ),
					strUrl: '/?module=application_systemxxx&application[id]=' + intApplicationId
				} );
			}, intTime );
		} else if( true == arrmixApplicationData.has_multiple_leads ) {
			psi.patterns.loadDialog( {
				title: __( 'Incoming Call - Possible Matches' ),
				strContentId: 'add_lead_dlg',
				strUrl: arrstrExitTags.view_matched_applicants + '&call[id]='+ intCallId,
				width: '800',
				height: '400'
			} );
		} else {
			var strShowCallRecording = '';
			var strEventId = '';
			psi.patterns.loadDialog( {
				title: __( 'Incoming Call - Choose Action' ),
				strContentId: 'call_association_container',
				strUrl: arrstrExitTags.create_call_tracker_associate + '&call[id]='+intCallId+'&isLoadCallAction=1&event[id]='+strEventId,
				width: '522',
				height: '400'
			} );
		}
	}

	function removeCallNotification( objMessage ) {
		var strFrom = objMessage.getAttribute( 'from' );
		var intApplicationId = objMessage.getAttribute( 'application_id' );
		var strNick = strFrom.split( '/' )[1];

		if( strNick !== connection.authcid ) {
			$( "#call_" + intApplicationId ).remove();
		}
	}

	return {
		setConnection: setConnection,
		initCallNotifications: initCallNotifications,
		removeCallNotification: removeCallNotification,
		deleteCallNotification: deleteCallNotification,
		handleCallNotifications: handleCallNotifications
	};

} ();