Final Design Decisions (2025‑04‑17)

Google Sheet input – The popup UI includes a text field where staff enter or paste the audit Sheet URL/ID at the start of every run. The value is used for that session only and is not persisted between sessions.

Header row – The audit template's header is always located on row 8. All column look‑ups and range calculations assume this fixed row.

PDF extraction fallback – If readable text cannot be obtained from Entrata's PDF viewer, the field is flagged for manual verification; the extension will not attempt a download + PDF.js parse in v1.

Comments – When the user skips or flags a field, the extension will attach a Google Sheets cell comment (via the Sheets API) to that cell. If the API call fails or the account lacks permission to add comments, the extension will proceed without adding one.

Write strategy – Spreadsheet cells are updated immediately after each user action (no batching).

Language choice – Implementation in plain JavaScript (ES2022); no TypeScript in v1.

Run summary – No post‑run summary UI in v1 (reserved for a future version).

Entrata Navigation – The extension navigates directly to the customers system page using the URL 'https://preiss.entrata.com/?module=customers_systemxxx' instead of requiring manual navigation to the residents page.

Sorting Records – Records are sorted alphabetically by resident name (first name + last name) to ensure consistency in audit order.

Lease Document Detection – The extension searches for documents matching the pattern "* Lease - Signed" where * is a wildcard for the property name, ensuring it works across different properties.

Perfect — I'll get to work on a fully rewritten, clarified, and structured requirements specification tailored to your project.

This new version will include:
- A modular, column-by-column automation engine (hardcoded logic per column is fine for now)
- A streamlined user-controlled workflow with UI and PDF viewing features
- A detailed step-by-step operational flow, including Entrata navigation and filtering
- Notes on key design decisions, tradeoffs (like scrolling instead of PDF highlights), and best practices

I'll also explore and describe the feasibility and design of the modular audit instruction layer based on your description. I'll let you know as soon as it's ready for review.

# Chrome Extension for Lease Audit Automation – Requirements Specification

## Introduction  
On-site staff at apartment communities routinely conduct **lease audits** to ensure the details in signed lease agreements match the data entered into property management systems. This specification describes a Chrome Extension designed to automate the lease audit process for properties using the Entrata platform in conjunction with Google Sheets. The extension will streamline verification of lease data by automatically retrieving lease information from Entrata's web interface and comparing it against an audit spreadsheet, reducing manual effort and errors. The system operates entirely via browser automation (no direct Entrata API usage) and integrates with Google Sheets through the Google Sheets API, with a focus on security (no long-term storage of sensitive data) and ease of use for non-technical staff.